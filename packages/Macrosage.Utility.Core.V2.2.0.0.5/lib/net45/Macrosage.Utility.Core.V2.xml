<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Macrosage.Utility.Core.V2</name>
    </assembly>
    <members>
        <member name="T:Macrosage.Utility.Cache.MemcachedHelper">
            <summary>
            Memcached 操作类
            <para>服务器 memcached 版本: 1.4.4 及以上</para>
            </summary>
            <summary>
            Memcached 操作类
            <para>服务器 memcached 版本: 1.4.4 及以上</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Cache.MemcachedHelper.GetData``1(System.String)">
            <summary>
            获取
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Cache.MemcachedHelper.AppendPlatform(System.String,System.Int32)">
            <summary>
            中转页/不同浏览器登陆使用此方法追加平台id
            </summary>
            <param name="cacheKey"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Cache.MemcachedHelper.ResetPlatformData(System.String)">
            <summary>
            重置登陆平台集合
            </summary>
            <param name="cacheKey"></param>
        </member>
        <member name="M:Macrosage.Utility.Cache.MemcachedHelper.Set(System.String,System.Object)">
            <summary>
            添加一个对象到缓存中，如果已经存在则覆写，不存在则自动创建，默认时间30天
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Cache.MemcachedHelper.Set(System.String,System.Object,System.Int32)">
            <summary>
            添加一个对象到缓存中，如果已经存在则覆写，不存在则自动创建
            </summary>
            <param name="key">key</param>
            <param name="value">value</param>
            <param name="expiry">过期时间（分钟）</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Cache.MemcachedHelper.Add(System.String,System.Object)">
            <summary>
            添加一个对象到缓存中，如果已经存在则返回false并不改变值，不存在则创建，默认时间30天
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Cache.MemcachedHelper.Add(System.String,System.Object,System.Int32)">
            <summary>
            添加一个对象到缓存中，如果已经存在则返回false并不改变值，不存在则创建
            </summary>
            <param name="key">key</param>
            <param name="value">value</param>
            <param name="expiry">过期时间（分钟）</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Cache.MemcachedHelper.Replace(System.String,System.Object)">
            <summary>
            替换一个已经存在的缓存对象，不存在则返回false，存在则替换，默认时间30天
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Cache.MemcachedHelper.Replace(System.String,System.Object,System.Int32)">
            <summary>
            替换一个已经存在的缓存对象，不存在则返回false，存在则替换
            </summary>
            <param name="key">key</param>
            <param name="value">value</param>
            <param name="expiry">过期时间（分钟）</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Cache.MemcachedHelper.Delete(System.String)">
            <summary>
            删除一个缓存的key与value
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Cache.MemcachedHelper.Clear">
            <summary>
            清除所有缓存的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Cache.MemcachedHelper.Get(System.String)">
            <summary>
            获取指定key值的对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Cache.MemcachedHelper.Get``1(System.String)">
            <summary>
            获取指定key值的对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.Cache.MsCacheHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Cache.MsCacheHelper.Insert(System.String,System.Object)">
            <summary>
            添加新缓存
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Macrosage.Utility.Cache.MsCacheHelper.Insert(System.String,System.Object,System.Int32)">
            <summary>
            添加新缓存
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="absoluteExpiration">该绝对过期时间（分钟），默认值：1440分钟</param>
        </member>
        <member name="M:Macrosage.Utility.Cache.MsCacheHelper.Remove(System.String)">
            <summary>
            清楚缓存
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Macrosage.Utility.Cache.MsCacheHelper.RemoveAll">
            <summary>
            清楚全部缓存
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Cache.MsCacheHelper.InsertAndGetCache(System.String,System.Object)">
            <summary>
            添加缓存并返回缓存的数据
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Cache.MsCacheHelper.InsertAndGetCache(System.String,System.Object,System.Int32)">
            <summary>
            添加缓存并返回缓存的数据
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="absoluteExpiration">该绝对过期时间（分钟），小于1时为默认值：1440分钟</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Cache.MsCacheHelper.InsertAndGetCache``1(System.String,System.Object)">
            <summary>
            添加缓存并返回缓存的数据
            </summary>
            <typeparam name="T">返回数据类型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Cache.MsCacheHelper.InsertAndGetCache``1(System.String,System.Object,System.Int32)">
            <summary>
            添加缓存并返回缓存的数据
            </summary>
            <typeparam name="T">返回数据类型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="absoluteExpiration">该绝对过期时间（分钟），小于1时为默认值：1440分钟</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Cache.MsCacheHelper.GetCache(System.String)">
            <summary>
            获取缓存数据
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Cache.MsCacheHelper.GetCache``1(System.String)">
            <summary>
            获取缓存数据
            </summary>
            <typeparam name="T">指定返回类型</typeparam>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.CodeTimer">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.AppSettings">
            <summary>
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.AppSettings.ReadAppSettings(System.Collections.Concurrent.ConcurrentDictionary{System.String,System.Object},System.String,System.Boolean)">
            <summary>
            读取分布 AppSettings 文件
            </summary>
            <param name="keyValues">储存集合对象</param>
            <param name="path">物理路径</param>
            <param name="isKeyToLower">是否将key转成小写</param>
        </member>
        <member name="M:Macrosage.Utility.AppSettings.SetDefualtValue(System.Collections.Concurrent.ConcurrentDictionary{System.String,System.Object},System.String,System.Object)">
            <summary>
            向集合中赋值
            </summary>
        </member>
        <member name="M:Macrosage.Utility.AppSettings.GetValue``1(System.String)">
            <summary>
            获取配置appSettings[name="<paramref name="key"/>"]的值。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.AppSettings.GetValue(System.String)">
            <summary>
            获取指定的Config文件的AppSetting里面的指定键值对应的value值
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.AppSettings.GetValue``1(System.String,``0)">
            <summary>
            获取配置appSettings[name="<paramref name="key"/>"]的值。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="defValue"></param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.EncryptHelper">
            <summary>
            
            </summary>
        </member>
        <member name="F:Macrosage.Utility.EncryptHelper.StrDesKey">
            <summary>
            DES 加密所需8位密匙
            </summary>
        </member>
        <member name="M:Macrosage.Utility.EncryptHelper.GetApiKey(System.String,System.String,System.String,System.String)">
            <summary>
            生成 api 调用 key
            </summary>
        </member>
        <member name="M:Macrosage.Utility.EncryptHelper.ToMD5(System.String,System.Boolean)">
            <summary>
            MD5加密，默认大写
            </summary>
            <param name="value"></param>
            <param name="isToUpper"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.EncryptHelper.ToSHA1(System.String,System.Boolean)">
            <summary>
            SHA1加密，默认小写
            </summary>
            <param name="value"></param>
            <param name="isToUpper"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.EncryptHelper.Base64Encode(System.Byte[])">
            <summary>
            对字符串进行Base64编码
            </summary>
            <param name="inArray">一个 8 位无符号整数数组</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.EncryptHelper.Base64Encode(System.String)">
            <summary>
            对字符串进行Base64编码
            </summary>
            <param name="value">要处理的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.EncryptHelper.Base64Encode(System.String,System.Text.Encoding)">
            <summary>
            对字符串进行Base64编码
            </summary>
            <param name="value">要处理的字符串</param>
            <param name="encoding">编码</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.EncryptHelper.Base64Decode(System.String)">
            <summary>
            对Base64编码进行解码
            </summary>
            <param name="value">要处理的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.EncryptHelper.Base64Decode(System.String,System.Text.Encoding)">
            <summary>
            对字符串进行Base64解码
            </summary>
            <param name="value">要处理的字符串</param>
            <param name="encoding">编码</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.EncryptHelper.IsBase64(System.String)">
            <summary>
              是否是Base64字符串
            </summary>
            <param name = "value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.EncryptHelper.DESEncrypt(System.String,System.String)">
            <summary>
            DES加密
            </summary>
            <param name="value"></param>
            <param name="key">自定义秘钥</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.EncryptHelper.DESDecrypt(System.String,System.String)">
            <summary>
            DES解密
            </summary>
            <returns>返回解密后字符串</returns>
        </member>
        <member name="M:Macrosage.Utility.EncryptHelper.GenerateKey">
            <summary>
            自定义随机密钥时使用
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.EncryptHelper.XxteaEncrypt(System.String,System.String)">
            <summary>
            
            <para>测试方式: var s = EncryptHelper.XxteaEncrypt("hello~! 我在", "1234567890abcdef");</para>
            </summary>
            <param name="value"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.EncryptHelper.XxteaDecrypt(System.String,System.String)">
            <summary>
            
            <para>测试方式: var s = EncryptHelper.XxteaDecrypt(s, "1234567890abcdef");</para>
            </summary>
            <param name="value"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.FtpHelper">
            <summary>
            FTP 上传类
            </summary>
        </member>
        <member name="M:Macrosage.Utility.FtpHelper.UploadFileBase_v1(System.IO.Stream,System.String)">
            <summary>
            兼容百度编辑器及项目 V1 部分功能
            </summary>
            <param name="fileStream"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.FtpHelper.UploadFile(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="fileStream">需要上传的文件流</param>
            <param name="upFileName">客户端上传文件名</param>
            <param name="newFileName">生成与服务器新文件名</param>
            <param name="clientId">客户端唯一标识</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.FtpHelper.UploadFile(System.Web.HttpPostedFileBase,System.String,System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="file">客户端已上载的单独文件的访问</param>
            <param name="upFileName">客户端上传文件名</param>
            <param name="newFileName">生成与服务器新文件名</param>
            <param name="clientId">客户端唯一标识</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.FtpHelper.UploadFile(System.Web.HttpPostedFile,System.String,System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="file">客户端已上载的单独文件的访问</param>
            <param name="upFileName">客户端上传文件名</param>
            <param name="newFileName">生成与服务器新文件名</param>
            <param name="clientId">客户端唯一标识</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.FtpHelper.UploadFile(System.IO.Stream,System.String,System.String,System.String,Macrosage.Utility.Models.Ftp.UploadFileModel@)">
            <summary>
            上传文件，同名会覆盖
            </summary>
            <param name="fileStream">需要上传的文件流</param>
            <param name="upFileName">客户端上传文件名</param>
            <param name="newFileName">生成与服务器新文件名</param>
            <param name="clientId">客户端唯一标识</param>
            <param name="o">上传</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.FtpHelper.GetFileStream(System.String)">
            <summary>
            读取文件流【调用处注意关闭流】
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.FtpHelper.UploadFile(System.IO.Stream,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="fileStream">需要上传的文件流</param>
            <param name="path">保存路径</param>
        </member>
        <member name="M:Macrosage.Utility.FtpHelper.CreateDirectory(System.String)">
            <summary>
            创建文件夹
            </summary>
            <param name="path">文件夹路径</param>
        </member>
        <member name="M:Macrosage.Utility.FtpHelper.DeleteDirectory(System.String)">
            <summary>
            删除文件夹及文件夹下的文件
            </summary>
            <param name="path">文件夹路径</param>
        </member>
        <member name="M:Macrosage.Utility.FtpHelper.DeleteFile(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="path">文件路径</param>
        </member>
        <member name="M:Macrosage.Utility.FtpHelper.DirectoryExists(System.String)">
            <summary>
            检测文件夹是否存在
            </summary>
            <param name="path">文件夹路径</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.FtpHelper.FileExists(System.String)">
            <summary>
            检测文件是否存在
            </summary>
            <param name="path">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.FtpHelper.Rename(System.String,System.String)">
            <summary>
            重命名文件夹或文件
            </summary>
            <param name="sourcePath">原文件夹或文件名</param>
            <param name="destPath">新文件夹或文件名</param>
        </member>
        <member name="T:Macrosage.Utility.HttpHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.HttpHelper.SendPost(System.String,System.String,Macrosage.Utility.HttpContentType)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="data"></param>
            <param name="tpye"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpHelper.SendGet(System.String,System.String,Macrosage.Utility.HttpContentType)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="data"></param>
            <param name="tpye"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpHelper.GetHttpContentType(Macrosage.Utility.HttpContentType)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.HttpResponseMessageHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.HttpResponseMessageHelper.Result(System.Net.HttpStatusCode,Macrosage.Utility.Models.ResultJsonModel)">
            <summary>
            HTTP 响应消息
            </summary>
            <param name="code">HTTP 定义的状态代码的值</param>
            <param name="model">ResultJsonModel 用于返回 json 对象</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpResponseMessageHelper.Result(System.Net.HttpStatusCode)">
            <summary>
            HTTP 响应消息
            </summary>
            <param name="code">HTTP 定义的状态代码的值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpResponseMessageHelper.Result(System.Net.HttpStatusCode,System.String)">
            <summary>
            HTTP 响应消息
            </summary>
            <param name="code">HTTP 定义的状态代码的值</param>
            <param name="content">用于初始化 System.Net.Http.StringContent 的内容</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpResponseMessageHelper.Result(System.Net.HttpStatusCode,System.String,System.Text.Encoding)">
            <summary>
            HTTP 响应消息
            </summary>
            <param name="code">HTTP 定义的状态代码的值</param>
            <param name="content">用于初始化 System.Net.Http.StringContent 的内容</param>
            <param name="encoding">要用于该内容的媒体，默认Json</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpResponseMessageHelper.Result(System.Net.HttpStatusCode,System.String,System.Text.Encoding,Macrosage.Utility.MediaType)">
            <summary>
            HTTP 响应消息
            </summary>
            <param name="code">HTTP 定义的状态代码的值</param>
            <param name="content">用于初始化 System.Net.Http.StringContent 的内容</param>
            <param name="encoding">响应消息编码，默认UTF-8</param>
            <param name="mediaType">要用于该内容的媒体，默认Json</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpResponseMessageHelper.Result(System.Net.HttpStatusCode,System.Object)">
            <summary>
            HTTP 响应消息
            </summary>
            <param name="code">HTTP 定义的状态代码的值</param>
            <param name="data">参数会自动 ToJson，可传 dataset/datatable/model/IEnumerable/new { ... }</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpResponseMessageHelper.ResultBase(System.Net.HttpStatusCode,System.String,System.Text.Encoding,System.String)">
            <summary>
            HTTP 响应消息
            </summary>
            <param name="code">HTTP 定义的状态代码的值</param>
            <param name="content">用于初始化 System.Net.Http.StringContent 的内容</param>
            <param name="encoding">响应消息编码，默认UTF-8</param>
            <param name="mediaType">要用于该内容的媒体，默认Json</param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.ImageHelper">
            <summary>
            图片操作类
            </summary>
        </member>
        <member name="M:Macrosage.Utility.ImageHelper.Thumbnail">
            <summary>
            创建缩略图
            </summary>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.JsonHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ToDictionaryByJson(System.String)">
            <summary>
            Json字符串转字典
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ToDataTableByJson(System.String)">
            <summary>
            Json字符串转DataTable
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ToOrgChartJson(System.Data.DataTable)">
            <summary>
            将 DataTable 转换成组织机构图使用的 json 格式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ToDataTable(System.String)">
            <summary>
            [Json.Net] 将 标准Json 字符串转成 DataTable
            <para>Json 格式为：</para>
            <para>{</para>
            <para>　"TableName": [</para>
            <para>　　{"Column0": "Value0", "Column1": "Value1"},</para>
            <para>　　{"Column0": "Value0", "Column1": "Value1"},</para>
            <para>　　{"Column0": "Value0", "Column1": "Value1"}</para>
            <para>　]</para>
            <para>}</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ToDataTableBySimple(System.String)">
            <summary>
            [Json.Net] 将 简单Json 字符串转成 DataTable
            <para>Json 格式为：</para>
            <para>[</para>
            <para>　　{"Column0": "Value0", "Column1": "Value1"},</para>
            <para>　　{"Column0": "Value0", "Column1": "Value1"},</para>
            <para>　　{"Column0": "Value0", "Column1": "Value1"}</para>
            <para>]</para>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ToDataTableByArray(System.String)">
            <summary>
            [Json.Net] 将 数组Json 字符串转成 DataTable
            <para>Json 格式为：</para>
            <para>{"Column0": "Value0", "Column1": "Value1"},</para>
            <para>{"Column0": "Value0", "Column1": "Value1"}</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ToDataSet(System.String)">
            <summary>
            [Json.Net] 将 Json 字符串转成 DataSet
            <para>Json 格式为：</para>
            <para>{</para>
            <para>　"TableName1": [</para>
            <para>　　{"Column0": "Value0", "Column1": "Value1"},</para>
            <para>　　{"Column0": "Value0", "Column1": "Value1"},</para>
            <para>　　{"Column0": "Value0", "Column1": "Value1"}</para>
            <para>　],</para>
            <para>　"TableName2": [</para>
            <para>　　{"Column0": "Value0", "Column1": "Value1"},</para>
            <para>　　{"Column0": "Value0", "Column1": "Value1"},</para>
            <para>　　{"Column0": "Value0", "Column1": "Value1"}</para>
            <para>　]</para>
            <para>}</para>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ToJson(System.Object,System.String)">
            <summary>
            [Json.Net] 将集合转成 Json 字符串
            <para>返回格式：[{...},{...},{...}]</para>
            </summary>
            <param name="value"></param>
            <param name="defValue"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ToJsonArray(System.Object,System.String)">
            <summary>
            [Json.Net] 将集合转成 Json 数组形式
            <para>返回格式：{...},{...},{...}</para>
            </summary>
            <param name="value"></param>
            <param name="defValue"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ToDeserializeObject``1(System.String)">
            <summary>
            [Json.Net] 将 Json 转成泛型对象
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ResultJson(System.Int32)">
            <summary>
            新标准 json 格式，建议优先使用枚举方式
            </summary>
            <param name="code">系统消息编码</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ResultJson(System.Int32,System.String)">
            <summary>
            新标准 json 格式，建议优先使用枚举方式
            </summary>
            <param name="code">系统消息编码</param>
            <param name="message">自定义消息</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ResultJson(System.Int32,System.Object)">
            <summary>
            新标准 json 格式，建议优先使用枚举方式
            </summary>
            <param name="code">系统消息编码</param>
            <param name="data">返回数据集</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ResultJson(System.Int32,System.String,System.Object)">
            <summary>
            新标准 json 格式，建议优先使用枚举方式
            </summary>
            <param name="code">系统消息编码</param>
            <param name="message">自定义消息</param>
            <param name="data">返回数据集</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ResultJson(System.Enum)">
            <summary>
            新标准 json 格式
            </summary>
            <param name="enumType">系统消息枚举</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ResultJson(System.Enum,System.String)">
            <summary>
            新标准 json 格式
            </summary>
            <param name="enumType">系统消息枚举</param>
            <param name="message">自定义消息</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ResultJson(System.Enum,System.Object)">
            <summary>
            新标准 json 格式
            </summary>
            <param name="enumType">系统消息枚举</param>
            <param name="data">返回数据集</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ResultJson(System.Enum,System.String,System.Object)">
            <summary>
            新标准 json 格式
            </summary>
            <param name="enumType">系统消息枚举</param>
            <param name="message">自定义消息</param>
            <param name="data">返回数据集</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.CreateResultJson(System.Int32,System.String,System.String)">
            <summary>
            新旧标准混合 json 格式
            <para>建议使用新标准</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.CreateResultJson(System.Int32,System.String)">
            <summary>
            新旧标准混合 json 格式
            <para>建议使用新标准</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.CreateResultJson(System.Int32)">
            <summary>
            新旧标准混合 json 格式
            <para>建议使用新标准</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.CreateResultJson(System.Enum,System.String,System.String)">
            <summary>
            新旧标准混合 json 格式
            <para>建议使用新标准</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.CreateResultJson(System.Enum,System.String)">
            <summary>
            新旧标准混合 json 格式
            <para>建议使用新标准</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.CreateResultJson(System.Enum)">
            <summary>
            新旧标准混合 json 格式
            <para>建议使用新标准</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ResultUploadJson(System.Enum,System.String,System.String,System.Object)">
            <summary>
            上传返回 json
            </summary>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.ToTitleCase(System.String)">
            <summary>
            将指定的字符串转换为词首字母大写
            <para>codec_long_name --> Codec_Long_Name</para>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.JsonHelper.JsonToClassFile(System.String)">
            <summary>
            根据json字符串生成实体cs文件
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.LogHelper">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.MapHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.MapHelper.ToList``1(System.Object)">
            <summary>
            映射数据源中的数据到目标对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.MapHelper.ToSingle``1(System.Object)">
            <summary>
            映射数据源中的一行数据到目标对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.MsCookie">
            <summary>
            Cookies操作
            </summary>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.IsExists(System.String)">
            <summary>
            判断cookie是否存在
            </summary>
            <param name="strName">cookie名称</param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.IsExists(System.String,System.String)">
            <summary>
            判断cookie是否存在
            </summary>
            <param name="strName">cookie名称</param>
            <param name="strKey">键</param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.BaseWriteCookie(System.String,System.String,System.Boolean,System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.String,System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="cookieName">cookie名称</param>
            <param name="writeValue">写入值</param>
            <param name="writeValueIsBase64">是否Base64加密</param>
            <param name="writeValueIsIndex">是否以索引方式追加</param>
            <param name="writeValueKey">索引 key</param>
            <param name="isDomain">是否关联域</param>
            <param name="domain">关联域名称</param>
            <param name="isPath">是否传输虚拟路径</param>
            <param name="path">传输虚拟路径</param>
            <param name="expires">过期时间</param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.WriteCookie(System.String,System.String)">
            <summary>
            写入cookie[更改过-进程内]
            </summary>
            <param name="strName">cookie名称</param>
            <param name="strValue">值</param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.WriteCookie(System.String,System.String,System.String,System.String)">
            <summary>
            写入cookie[更改过-进程内]
            </summary>
            <param name="strName">cookie名称</param>
            <param name="strValue">值</param>
            <param name="path"></param>
            <param name="domain"></param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.WriteCookie(System.String,System.String,System.String)">
            <summary>
            写入cookie
            </summary>
            <param name="strName">cookie名称</param>
            <param name="strKey">键</param>
            <param name="strValue">值</param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.WriteCookie(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            写入cookie[更改过-进程内]
            </summary>
            <param name="strName">cookie名称</param>
            <param name="strKey">键</param>
            <param name="strValue">值</param>
            <param name="domain"></param>
            <param name="path"></param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.WriteCookie(System.String,System.String,System.String,System.Int32)">
            <summary>
            写入cookie
            </summary>
            <param name="strName">cookie名称</param>
            <param name="strKey">键</param>
            <param name="strValue">值</param>
            <param name="expires">cookie到期时间（分钟）</param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.WriteCookieNE(System.String,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="strName"></param>
            <param name="strKey"></param>
            <param name="strValue"></param>
            <param name="expires"></param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.WriteCookie(System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            写入cookie[更改过-进程内]
            </summary>
            <param name="strName">cookie名称</param>
            <param name="strKey">键</param>
            <param name="strValue">值</param>
            <param name="expires">cookie到期时间（分钟）</param>
            <param name="domain"></param>
            <param name="path"></param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.WriteCookieNE(System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="strName"></param>
            <param name="strKey"></param>
            <param name="strValue"></param>
            <param name="expires"></param>
            <param name="domain"></param>
            <param name="path"></param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.WriteCookie(System.String,System.String,System.Int32)">
            <summary>
            写入cookie
            </summary>
            <param name="strName">cookie名称</param>
            <param name="strValue">值</param>
            <param name="expires">cookie到期时间（分钟）</param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.WriteCookieNE(System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="strName"></param>
            <param name="strValue"></param>
            <param name="expires"></param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.WriteCookie(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            写入cookie[更改过-进程内]
            </summary>
            <param name="strName">cookie名称</param>
            <param name="strValue">值</param>
            <param name="expires">cookie到期时间（分钟）</param>
            <param name="domain"></param>
            <param name="path"></param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.WriteCookieNE(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="strName"></param>
            <param name="strValue"></param>
            <param name="expires"></param>
            <param name="domain"></param>
            <param name="path"></param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.GetCookie(System.String)">
            <summary>
            获取cookie值[更改过]
            </summary>
            <param name="strName">cookie名称</param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.GetCookies(System.String)">
            <summary>
            获取cookie值
            </summary>
            <param name="strName">cookie名称</param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.GetCookie(System.String,System.String)">
            <summary>
            获取cookie值
            </summary>
            <param name="strName">cookie名称</param>
            <param name="strKey">键</param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.ClearCookie(System.String[])">
            <summary>
            清空cookie
            </summary>
            <param name="strName">cookie名称</param>
        </member>
        <member name="M:Macrosage.Utility.MsCookie.ClearCookieAll">
            <summary>
            清除所有Cookie
            </summary>
        </member>
        <member name="M:Macrosage.Utility.MsRegex.IsMatch(System.String,System.String)">
            <summary>
            正则验证基础方法
            </summary>
            <param name="input">要搜索匹配项的字符串</param>
            <param name="pattern">要匹配的正则表达式模式</param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.ResourceHelperBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:Macrosage.Utility.ResourceHelperBase.AccountLayerDomain">
            <summary>
            客户端调用层服务域名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.PublicJs">
            <summary>
            公共Js脚本、及插件地址
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.Img1Server">
            <summary>
            文件服务器地址
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.Img2Server">
            <summary>
            二维码图片服务器
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.WebApiServiceDomain">
            <summary>
            WebApi服务域名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.CuctvPlayerDomain">
            <summary>
            视友网播放地址
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.PushServerDomain">
            <summary>
            消息推送服务域名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.ImDomain">
            <summary>
            组织端聊天域名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.GuruCVDomain">
            <summary>
            天才详历域名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.GuruCVShowDomain">
            <summary>
            详历展示域名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.RegWizardDomain">
            <summary>
            向导域名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.ZparkDomain">
            <summary>
            中关村软件园人才服务平台域名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.PortalDomain">
            <summary>
            门户顶级域名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.CDN1Domain">
            <summary>
            CDN1静态资源域名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.CDNDomain">
            <summary>
            CDN静态资源域名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.ShortUrlDomain">
            <summary>
            短网址服务域名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.GuruCVTopDomain">
            <summary>
            GuRuCv顶级域名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.RmsDomain">
            <summary>
            RMS招聘系统域名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.CePingDomain">
            <summary>
            测评系统域名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.UEditorConfigJson">
            <summary>
            百度编辑器 config.json 配置路径
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.CookieTimeout">
            <summary>
            cookie 过期时间，单位分钟
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.CacheTime">
            <summary>
            cache 过期时间，单位分钟
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.ProjectId">
            <summary>
            平台标识Id
            </summary>
        </member>
        <member name="P:Macrosage.Utility.ResourceHelperBase.Copyright">
            <summary>
            网站备案信息
            </summary>
        </member>
        <member name="T:Macrosage.Utility.ValidateCode">
            <summary>   
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.ValidateCode.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
            正弦曲线Wave扭曲图片（Edit By 51aspx.com）
            </summary>
            <param name="srcBmp">图片路径</param>
            <param name="bXDir">如果扭曲则选择为True</param>
            <param name="nMultValue">波形的幅度倍数，越大扭曲的程度越高，一般为3</param>
            <param name="dPhase">波形的起始相位，取值区间[0-2*PI)</param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.XmlHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.GetElementsFirstOrDefault(System.String)">
            <summary>
            默认返回第一个
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.GetElements(System.String)">
            <summary>
            查询指定的
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.CreateXmlDocument(System.String,System.String)">
            <summary>
            创建XML文档
            </summary>
            <param name="name">根节点名称</param>
            <param name="type">根节点的一个属性值</param>
            <returns></returns>
            moss中调用方法：创建的文件如果要存到moss的文档库中,则：
                     XmlDocument doc = XmlOperate.CreateXmlDocument("project", "T");
                       在此可嵌入增加子节点方法,如AddTaskNode(taskObj, ref doc); ..
                     byte[] fileContent = Encoding.UTF8.GetBytes(doc.OuterXml);
                     folder.Files.Add("name.xml", fileContent, true);
                     web.Update();
            .net中调用方法：写入文件中,则：
                     document = XmlOperate.CreateXmlDocument("sex", "sexy");
                     document.Save("c:/bookstore.xml");         
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.AddNewNode1(System.Xml.XmlDocument@,System.String,System.String)">
            <summary>
            在根节点下增加子元素
            </summary>
            <param name="document"></param>
            <param name="nodeName"></param>
            <param name="type"></param>
            调用方法：
                 document = xmloper.CreateXmlDocument("animal", "carnivore");
                 XmlOperate.AddNewNode1(ref document, "carnivore", "high");
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.AddNewNode2(System.Xml.XmlElement@,System.String,System.String)">
             <summary>
             在元素下增加子元素
             </summary>
             <param name="element"></param>
             <param name="nodeName"></param>
             <param name="type"></param>
             调用方法：
                   XmlDocument document = new XmlDocument();
                   先取到相应的元素,然后调用该方法在该元素下增加子元素
                   XmlElement root = (XmlElement)document.SelectSingleNode("//animal/third");
                   XmlOperate.AddNewNode2(ref root,"thaw","boost investor confidence");
            注意上面的"//animal/third"也可换成"workflow[@type='T' and @isSpecial='1']"这种形式用来获取带有相应属性的元素
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.GetDesiredNode(System.String)">
            <summary>
            获取类型为制定值的一组节点
            </summary>
            <param name="type">类型值。E.G.workflow[@type='T' and @isSpecial='1']</param>
            <returns></returns>
            注意：返回的 XmlNodeList 类型是个类似于arraylist的类型,所以要得到它的值只能遍历
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.GetXMLDocumentFromWebPage(System.String)">
            <summary>
            抓取网页上的xml文档赋值给XmlDocument对象
            </summary>
            <param name="url">网页的url（网页的内容必须是xml格式的）</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.GetXMLFile(System.String)">
            <summary>
            获取服务器上指定文件的xml文件内容
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.GetDataSetByXml(System.String)">
            <summary>
            读取xml直接返回DataSet 
            </summary>
            <param name="strXmlPath">xml文件相对路径</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.GetDataViewByXml(System.String,System.String,System.String)">
            <summary>
            读取Xml返回一个经排序或筛选后的DataView 
            </summary>
            <param name="strXmlPath">xml文件相对路径</param>
            <param name="strWhere">筛选条件,如："name = ＇kgdiwss＇"</param>
            <param name="strSort">排序条件,如："Id desc"</param>
            <returns></returns>        
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.GetDataViewByXml(System.String,System.Int32,System.String,System.String)">
            <summary>
            读取Xml返回一个经排序或筛选后的DataView 
            </summary>
            <param name="strXmlPath">xml文件相对路径</param>
            <param name="i">查询是第几个表中的数据</param>
            <param name="strWhere">筛选条件,如："name = ＇kgdiwss＇"</param>
            <param name="strSort">排序条件,如："Id desc"</param>
            <returns></returns>        
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.WriteXmlByDataSet(System.String,System.String[],System.String[])">
            
            向Xml文件插入一行数据 
            
            xml文件相对路径 
            要插入行的列名数组,如：string[] Columns = {"name","IsMarried"}; 
            要插入行每列的值数组,如：string[] ColumnValue={"明天去要饭","false"}; 
            成功返回true,否则返回false 
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.UpdateXmlRow(System.String,System.String[],System.String[],System.String,System.String)">
            
            更行符合条件的一条Xml记录 
            
            XML文件路径 
            列名数组 
            列值数组 
            条件列名 
            条件列值 
            
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.DeleteXmlRowByIndex(System.String,System.Int32)">
            
            通过删除DataSet中iDeleteRow这一行,然后重写Xml以实现删除指定行 
            
            
            要删除的行在DataSet中的Index值 
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.DeleteXmlRows(System.String,System.String,System.String[])">
            
            删除strColumn列中值为ColumnValue的行 
            
            xml相对路径 
            列名 
            strColumn列中值为ColumnValue的行均会被删除 
            
        </member>
        <member name="M:Macrosage.Utility.XmlHelper.DeleteXmlAllRows(System.String)">
            
            删除所有行 
            
            XML路径 
            
        </member>
        <member name="P:Macrosage.Utility.XmlHelper.PrintTemplatePath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Macrosage.Utility.XmlHelper.Root">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.DbHelper.MacrosageSqlHelper">
            <summary>
            
            </summary>
        </member>
        <member name="F:Macrosage.Utility.DbHelper.MacrosageSqlHelper.ConnectionStringsCacheKey">
            <summary>
            连接字符串缓存集合
            </summary>
        </member>
        <member name="F:Macrosage.Utility.DbHelper.MacrosageSqlHelper.DefaultCommandTimeout">
            <summary>
            修改默认 DbCommand Timeout 的值，默认为30s，目前设置为20s
            </summary>
        </member>
        <member name="F:Macrosage.Utility.DbHelper.MacrosageSqlHelper.CacheNamePrdfixKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:Macrosage.Utility.DbHelper.MacrosageSqlHelper.CacheNameMakeKey">
            <summary>
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.MacrosageSqlHelper.GetConnectionString(System.String)">
            <summary>
            获取连接字符串
            </summary>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.MacrosageSqlHelper.GetCacheName(System.String)">
            <summary>
            
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.MacrosageSqlHelper.MakeParameter(System.String,System.Data.SqlDbType,System.Object,System.Nullable{System.Int32})">
            <summary>
            单个创建参数
            </summary>
            <param name="parameterName"></param>
            <param name="type"></param>
            <param name="value"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.MacrosageSqlHelper.MakeParameters``1(System.Data.SqlDbType,``0[])">
            <summary>
            批量创建同类型参数并自动缓存参数
            <para>Int BigInt --> @int{N} 如:@int0 @int1...</para>
            <para>NChar Char NVarChar VarChar NText Text --> @string{N} 如:@string0 @string1...</para>
            <para>UniqueIdentifier --> @guid{N} 如:@guid0 @guid1...</para>
            <para>DateTime Date Time DateTime2 DateTimeOffset --> @time{N} 如:@time0 @time1...</para>
            <para>Bit --> @bool{N} 如:@bool0 @bool1...</para>
            <para>Float Decimal Money SmallMoney --> @float{N} 如:@float0 @float1...</para>
            </summary>
            <param name="type"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.MacrosageSqlHelper.MakeParameters``1(System.String,System.Data.SqlDbType,``0[])">
            <summary>
            批量创建同类型参数并自动缓存参数
            <para>Int BigInt --> @int{N} 如:@int0 @int1...</para>
            <para>NChar Char NVarChar VarChar NText Text --> @string{N} 如:@string0 @string1...</para>
            <para>UniqueIdentifier --> @guid{N} 如:@guid0 @guid1...</para>
            <para>DateTime Date Time DateTime2 DateTimeOffset --> @time{N} 如:@time0 @time1...</para>
            <para>Bit --> @bool{N} 如:@bool0 @bool1...</para>
            <para>Float Decimal Money SmallMoney --> @float{N} 如:@float0 @float1...</para>
            </summary>
            <param name="cacheName"></param>
            <param name="type"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.MacrosageSqlHelper.MakeParameters(System.String,System.Data.SqlDbType,System.Object,System.Nullable{System.Int32})">
            <summary>
            单个创建参数
            </summary>
            <param name="parameterName"></param>
            <param name="type"></param>
            <param name="value"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.MacrosageSqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Data.SqlClient.SqlTransaction)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="cmdType"></param>
            <param name="cmdText"></param>
            <param name="commandParameters"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.MacrosageSqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Data.SqlClient.SqlTransaction)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="cmdType"></param>
            <param name="cmdText"></param>
            <param name="commandParameters"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.MacrosageSqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Data.SqlClient.SqlTransaction)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="cmdType"></param>
            <param name="cmdText"></param>
            <param name="commandParameters"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.MacrosageSqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Object@,System.Int32,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Data.SqlClient.SqlTransaction)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="cmdType"></param>
            <param name="cmdText"></param>
            <param name="outputValue"></param>
            <param name="parametersOutputIndex"></param>
            <param name="commandParameters"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.MacrosageSqlHelper.ExecuteDataSet(System.String,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Data.SqlClient.SqlTransaction)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="cmdType"></param>
            <param name="cmdText"></param>
            <param name="commandParameters"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.MacrosageSqlHelper.ExecuteDataSet(System.String,System.Data.CommandType,System.String,System.Object@,System.Int32,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Data.SqlClient.SqlTransaction)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="cmdType"></param>
            <param name="cmdText"></param>
            <param name="outputValue"></param>
            <param name="parametersOutputIndex"></param>
            <param name="commandParameters"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.MacrosageSqlHelper.ExecuteDataTable(System.String,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Data.SqlClient.SqlTransaction)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="cmdType"></param>
            <param name="cmdText"></param>
            <param name="commandParameters"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.MacrosageSqlHelper.CacheParameters(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            
            </summary>
            <param name="cacheKey"></param>
            <param name="commandParameters"></param>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.MacrosageSqlHelper.GetCachedParameters(System.String)">
            <summary>
            
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.DbHelper.ParameterModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.DbHelper.ParameterModel.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="parameterName"></param>
            <param name="parameterDbType"></param>
            <param name="size"></param>
            <param name="value"></param>
        </member>
        <member name="P:Macrosage.Utility.DbHelper.ParameterModel.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:Macrosage.Utility.DbHelper.ParameterModel.ParameterName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Macrosage.Utility.DbHelper.ParameterModel.DbType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Macrosage.Utility.DbHelper.ParameterModel.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EditorUpload.Config">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EditorUpload.Handler">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EditorUpload.HandlerExtension.ConfigHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EditorUpload.HandlerExtension.Crawler">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EditorUpload.HandlerExtension.CrawlerHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EditorUpload.HandlerExtension.ListFileManager">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EditorUpload.HandlerExtension.NotSupportedHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EditorUpload.HandlerExtension.UploadHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.EditorUpload.HandlerExtension.UploadHandler.UploadifyCrop(System.Collections.Generic.List{System.String})">
            <summary>
            FLASH上传
            </summary>
        </member>
        <member name="M:Macrosage.Utility.EditorUpload.HandlerExtension.UploadHandler.UEditorController(Macrosage.Utility.Models.EditorUpload.UploadResultModel,System.Collections.Generic.List{System.String})">
            <summary>
            编辑器或通用上传
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EditorUpload.PathFormatter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EditorUpload.UEditorController">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Enums.Push.MailBusiness">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Enums.Push.SmsBusiness">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Enums.Push.SendStatus">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Enums.Push.ConcurrentDictionaryKey">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Enums.Push.ApiStatus">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Enums.Push.SmsTemplate">
            <summary>
            短信模板
            <para>短信内容小于65个字符，中、英文均计算为一个字符。</para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Push.SmsTemplate.T1">
            <summary>
            【人物志】验证码：{0}。如非本人操作请忽略。
            <para>索引 0: 六位数字</para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Push.SmsTemplate.T2">
            <summary>
            【人物志】{0}，您的{1}为您创建人物志，您可登录 {2} 修改。
            <para>索引 0: 小于20个字符</para>
            <para>索引 1: 小于20个字符</para>
            <para>索引 2: 小于40个字符</para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Push.SmsTemplate.T3">
            <summary>
            【人物志】{0}，您的{1}邀请您加入{2}，点击 {3} 加入。
            <para>索引 0: 小于20个字符</para>
            <para>索引 1: 小于20个字符</para>
            <para>索引 2: 小于40个字符</para>
            <para>索引 3: 小于40个字符</para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Push.SmsTemplate.T4">
            <summary>
            【人物志】{0}，您的{1}邀请您对Ta{2}
            <para>索引 0: 小于20个字符</para>
            <para>索引 1: 小于20个字符</para>
            <para>索引 2: 小于40个字符</para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Push.SmsTemplate.T5">
            <summary>
            【人物志】注册成功，账号：{0}，密码：{1}，登录地址： {2}
            <para>索引 0: 小于20个字符</para>
            <para>索引 1: 小于20个字符</para>
            <para>索引 2: 小于40个字符</para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Push.SmsTemplate.T6">
            <summary>
            【人物志】尊敬的管理员，{0}提交了{1}申请，请尽快处理。
            <para>索引 0: 小于40个字符</para>
            <para>索引 1: 小于20个字符</para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Push.SmsTemplate.T7">
            <summary>
            【人物志】{0}给您发送了一个重要通知：{1}，请查阅： {2}
            <para>索引 0: 显示发送者名字（小于5个字符）</para>
            <para>索引 1: 显示通知的标题（70 - 22 - 索引0 - 索引2）</para>
            <para>索引 2: 短网址链接（小于20个字）</para>
            <para>固定文字长度22个字</para>
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Enums.Push.MailTemplate">
            <summary>
            邮件模板
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Push.MailTemplate.T1">
            <summary>
            详历用户注册时使用的邮件模版
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Push.MailTemplate.T2">
            <summary>
            详历用户找回密码时使用的邮件模版
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Push.MailTemplate.T3">
            <summary>
            邮箱激活码
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Push.MailTemplate.T4">
            <summary>
            圈子邀请邮件
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Push.MailTemplate.T5">
            <summary>
            评论邀请邮件
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Push.MailTemplate.T6">
            <summary>
            爆料邀请邮件
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Enums.Month">
            <summary>
            月份
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Month.Jan">
            <summary>
            一月 January
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Month.Feb">
            <summary>
            二月 February
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Month.Mar">
            <summary>
            三月 March
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Month.Apr">
            <summary>
            四月 April
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Month.May">
            <summary>
            五月 May
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Month.Jun">
            <summary>
            六月 June
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Month.Jul">
            <summary>
            七月 July
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Month.Aug">
            <summary>
            八月 August
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Month.Sep">
            <summary>
            九月September
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Month.Oct">
            <summary>
            十月 October
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Month.Nov">
            <summary>
            十一月November
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.Month.Dec">
            <summary>
            十二月December
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Enums.TimeFormat">
            <summary>
            日期与时间格式
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.TimeFormat.精简短日期">
            <summary>
            yy/M/d
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.TimeFormat.标准短日期">
            <summary>
            yyyy/MM/dd
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.TimeFormat.标准短日期旧版">
            <summary>
            yyyy-MM-dd
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.TimeFormat.精简长日期">
            <summary>
            yy年M月d日
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.TimeFormat.标准长日期">
            <summary>
            yyyy年MM月dd日
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.TimeFormat.精简短日期时间">
            <summary>
            yy-M-d H:mm
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.TimeFormat.标准短日期时间">
            <summary>
            yyyy-MM-dd HH:mm
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.TimeFormat.精简长日期时间">
            <summary>
            yy年M月d日 H时m分
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.TimeFormat.标准长日期时间">
            <summary>
            yyyy年MM月dd日 HH时mm分
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.TimeFormat.详细时间">
            <summary>
            yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Enums.UploadFileFormat">
            <summary>
            上传文件格式类型
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.UploadFileFormat.FileExtensionType">
            <summary>
            上传文件后缀名
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Enums.UploadFileFormat.FileContentType">
            <summary>
            上传文件 ContentType 格式
            </summary>
        </member>
        <member name="T:Macrosage.Utility.ConvertMethod">
            <summary>
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToBool(System.Object)">
            <summary>
            转换为bool
            </summary>
            <param name="value">要转换的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToBool(System.String)">
            <summary>
            转换为bool
            </summary>
            <param name="value">要转换的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToByte(System.Object,System.Byte)">
            <summary>
            转换为byte
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToByte(System.String,System.Byte)">
            <summary>
            转换为byte
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToDateTime(System.Object,System.String)">
            <summary>
            日期转制定格式
            </summary>
            <param name="value"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToDateTime(System.Object)">
            <summary>
            转换DateTime
            <para>失败时返回1900-01-01</para>
            </summary>
            <param name="value">被转换string</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToDateTime(System.String)">
            <summary>
            转换DateTime
            <para>失败时返回1900-01-01</para>
            </summary>
            <param name="value">被转换string</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToDateTime(System.String,System.DateTime)">
            <summary>
            转换DateTime
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="defValue">请自定义转换失败的值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToUnixTimestamp(System.DateTime)">
            <summary>
            DateTime时间格式转换为Unix时间戳格式
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToDateTimeByUnix(System.Int64)">
            <summary>
            将Unix时间戳转换为DateTime类型时间
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToDateTimeByGMT(System.String,System.String)">
            <summary>
            有时区的GMT时间转换为DateTime
            <para>如：新浪微博等</para>
            </summary>
            <param name="value">包含要转换的日期和时间的字符串</param>
            <param name="format">用于定义所需的 s 格式的格式说明符</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToDecimal(System.Object,System.Decimal)">
            <summary>
            转换为decimal
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToDecimal(System.String,System.Decimal)">
            <summary>
            转换为decimal
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToDouble(System.Object,System.Double)">
            <summary>
            转换为Double
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToDouble(System.String,System.Double)">
            <summary>
            转换为Double
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToGuid(System.Object)">
            <summary>
            转换Guid
            <para>失败是返回Guid.Empty</para>
            </summary>
            <param name="value">要转换的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToGuid(System.String)">
            <summary>
            转换Guid
            <para>失败是返回Guid.Empty</para>
            </summary>
            <param name="value">要转换的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToInt16(System.Object,System.Int16)">
            <summary>
            转换为Int16
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToInt16(System.String,System.Int16)">
            <summary>
            转换为Int16
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToInt32(System.Object,System.Int32)">
            <summary>
            转换为int
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToInt32(System.String,System.Int32)">
            <summary>
            转换为int
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToInt64(System.Object,System.Int64)">
            <summary>
            转换为long
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToInt64(System.String,System.Int64)">
            <summary>
            转换为long
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToFloat(System.Object,System.Single)">
            <summary>
            转换为folat
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToFloat(System.String,System.Single)">
            <summary>
            转换为folat
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToType``1(System.Object)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertMethod.ToEnumItem``1(System.Int32)">
            <summary>
            根据枚举值获得枚举对应项
            <para>注意：若不属于枚举项则返回 0</para>
            </summary>
            <typeparam name="T">枚举</typeparam>
            <param name="value">枚举值</param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.ConvertReaderMethod">
            <summary>
            DataReader转换到类型
            </summary>
        </member>
        <member name="M:Macrosage.Utility.ConvertReaderMethod.ToDataReaderInt64(System.Int32,System.Data.Common.DbDataReader)">
            <summary>
            DataReader转long
            </summary>
            <param name="ordinal"></param>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertReaderMethod.ToDataReaderInt32(System.Int32,System.Data.Common.DbDataReader)">
            <summary>
            DataReader转int
            </summary>
            <param name="ordinal">DataReader索引位置</param>
            <param name="dr">DataReader</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertReaderMethod.ToDataReaderInt16(System.Int32,System.Data.Common.DbDataReader)">
            <summary>
            DataReader转Int16
            </summary>
            <param name="ordinal">DataReader索引位置</param>
            <param name="dr">DataReader</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertReaderMethod.ToDataReaderString(System.Int32,System.Data.Common.DbDataReader)">
            <summary>
            DataReader转string
            </summary>
            <param name="ordinal">DataReader索引位置</param>
            <param name="dr">DataReader</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertReaderMethod.ToDataReaderBoolean(System.Int32,System.Data.Common.DbDataReader)">
            <summary>
            DataReader转bool
            </summary>
            <param name="ordinal">DataReader索引位置</param>
            <param name="dr">DataReader</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertReaderMethod.ToDataReaderGuid(System.Int32,System.Data.Common.DbDataReader)">
            <summary>
            DataReader转Guid
            </summary>
            <param name="ordinal">DataReader索引位置</param>
            <param name="dr">DataReader</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertReaderMethod.ToDataReaderDateTime(System.Int32,System.Data.Common.DbDataReader)">
            <summary>
            DataReader转DataTime
            </summary>
            <param name="ordinal">DataReader索引位置</param>
            <param name="dr">DataReader</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertReaderMethod.ToDataReaderDecimal(System.Int32,System.Data.Common.DbDataReader)">
            <summary>
            DataReader转decimal
            </summary>
            <param name="ordinal"></param>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertReaderMethod.ToDataReaderByte(System.Int32,System.Data.Common.DbDataReader)">
            <summary>
            DataReader转byte
            </summary>
            <param name="ordinal"></param>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertReaderMethod.ToDataReaderSingle(System.Int32,System.Data.Common.DbDataReader)">
            <summary>
            DataReader转Float
            </summary>
            <param name="ordinal"></param>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ConvertReaderMethod.ToDataReaderDouble(System.Int32,System.Data.Common.DbDataReader)">
            <summary>
            DataReader转Double
            </summary>
            <param name="ordinal"></param>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.HttpMethod">
            <summary>
            获取 HTTP 请求对象值 （待优化）
            </summary>
        </member>
        <member name="M:Macrosage.Utility.HttpMethod.ConvertJavaScriptEncodeURI(System.String,System.Text.Encoding)">
            <summary>
            将JS的encodeURI解码
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="value"></param>
            <param name="encoding">默认为UTF-8</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpMethod.Forms(System.Web.HttpContext,System.String,System.Boolean)">
            <summary>
            获取 POST 提交方式值
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="isEditor">是否需要将 js encodeURI 进行解码</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpMethod.Forms(System.String,System.Boolean)">
            <summary>
            获取 POST 提交方式值
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="value"></param>
            <param name="isEditor">是否需要将 js encodeURI 进行解码</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpMethod.QueryStrings(System.Web.HttpContext,System.String,System.Boolean)">
            <summary>
            获取 GET 提交方式值
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="isEditor">是否需要将 js encodeURI 进行解码</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpMethod.QueryStrings(System.String,System.Boolean)">
            <summary>
            获取 GET 提交方式值
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="value"></param>
            <param name="isEditor">是否需要将 js encodeURI 进行解码</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpMethod.HtmlEncode(System.String)">
            <summary>
            将字符串转换为 HTML 编码的字符串。
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="values">要编码的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpMethod.HtmlDecode(System.String)">
            <summary>
            将已经为 HTTP 传输进行过 HTML 编码的字符串转换为已解码的字符串。
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="values">要解码的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpMethod.UrlEncode(System.String)">
            <summary>
            对 URL 字符串进行编码。
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="values">要编码的文本</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.HttpMethod.UrlDecode(System.String)">
            <summary>
            将已经为在 URL 中传输而编码的字符串转换为解码的字符串。
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="values">要解码的字符串</param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.ImageFormatMethod">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.InitializeDefaultValue">
            <summary>
            默认值初始化设置
            </summary>
        </member>
        <member name="F:Macrosage.Utility.InitializeDefaultValue.DefaultJson">
            <summary>
            空json 返回 ""
            </summary>
        </member>
        <member name="F:Macrosage.Utility.InitializeDefaultValue.DefaultString">
            <summary>
            空字符串定义，默认值 string.Empty
            </summary>
        </member>
        <member name="F:Macrosage.Utility.InitializeDefaultValue.DefaultInt32">
            <summary>
            int32 类型，默认值 0
            </summary>
        </member>
        <member name="F:Macrosage.Utility.InitializeDefaultValue.DefaultInt16">
            <summary>
            int16 类型，默认值 0
            </summary>
        </member>
        <member name="F:Macrosage.Utility.InitializeDefaultValue.DefaultInt64">
            <summary>
            int64 类型，默认值 0
            </summary>
        </member>
        <member name="F:Macrosage.Utility.InitializeDefaultValue.DefaultByte">
            <summary>
            Byte类型，默认值 0
            </summary>
        </member>
        <member name="F:Macrosage.Utility.InitializeDefaultValue.DefaultFloat">
            <summary>
            单精度浮点，默认值 0
            </summary>
        </member>
        <member name="F:Macrosage.Utility.InitializeDefaultValue.DefaultDouble">
            <summary>
            双精度浮点，默认值 0
            </summary>
        </member>
        <member name="F:Macrosage.Utility.InitializeDefaultValue.DefaultDecimal">
            <summary>
            十进制数，默认值 0
            </summary>
        </member>
        <member name="F:Macrosage.Utility.InitializeDefaultValue.DefaultGuid">
            <summary>
            Guid类型默认值 Guid.Empty
            </summary>
        </member>
        <member name="F:Macrosage.Utility.InitializeDefaultValue.DefaultBoolean">
            <summary>
            bool类型默认值 false
            </summary>
        </member>
        <member name="F:Macrosage.Utility.InitializeDefaultValue.DefaultTime">
            <summary>
            DateTime类型默认值 1900-01-01
            </summary>
        </member>
        <member name="T:Macrosage.Utility.SystemExtensionMethod">
            <summary>
            系统方法扩展
            </summary>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToStrings(System.Object,System.String)">
            <summary>
            与ToString一样区别在于
            <para>为空或DBNull.Value，则返回 string.Empty</para>
            <para>不为空进行.ToString().Trim()操作</para>
            </summary>
            <param name="value"></param>
            <param name="defValue"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToStrings(System.Data.DataTable,System.Int32,System.Int32,System.String)">
            <summary>
            与ToString一样区别在于【用于 DataTable】
            <para>为空或DBNull.Value，则返回 string.Empty</para>
            <para>不为空进行.ToString().Trim()操作</para>
            </summary>
            <param name="dt"> </param>
            <param name="rowIndex"> </param>
            <param name="columnIndex"> </param>
            <param name="defValue"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToStrings(System.Data.DataTable,System.Int32,System.String,System.String)">
            <summary>
            与ToString一样区别在于【用于 DataTable】
            <para>为空或DBNull.Value，则返回 string.Empty</para>
            <para>不为空进行.ToString().Trim()操作</para>
            </summary>
            <param name="dt"></param>
            <param name="rowIndex"></param>
            <param name="columnName"></param>
            <param name="defValue"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToStrings(System.Data.DataRow[],System.Int32,System.Int32,System.String)">
            <summary>
            与ToString一样区别在于【用于 DataRow[]】
            <para>为空或DBNull.Value，则返回 string.Empty</para>
            <para>不为空进行.ToString().Trim()操作</para>
            </summary>
            <param name="dr"></param>
            <param name="rowIndex"></param>
            <param name="columnIndex"></param>
            <param name="defValue"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToStrings(System.Data.DataRow[],System.Int32,System.String,System.String)">
            <summary>
            与ToString一样区别在于【用于 DataRow[]】
            <para>为空或DBNull.Value，则返回 string.Empty</para>
            <para>不为空进行.ToString().Trim()操作</para>
            </summary>
            <param name="dr"></param>
            <param name="rowIndex"></param>
            <param name="columnName"></param>
            <param name="defValue"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToStrings(System.Data.DataRow,System.Int32,System.String)">
            <summary>
            与ToString一样区别在于【用于 DataRow】
            <para>为空或DBNull.Value，则返回 string.Empty</para>
            <para>不为空进行.ToString().Trim()操作</para>
            </summary>
            <param name="dr"></param>
            <param name="columnIndex"></param>
            <param name="defValue"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToStrings(System.Data.DataRow,System.String,System.String)">
            <summary>
            与ToString一样区别在于【用于 DataRow】
            <para>为空或DBNull.Value，则返回 string.Empty</para>
            <para>不为空进行.ToString().Trim()操作</para>
            </summary>
            <param name="dr"></param>
            <param name="column"></param>
            <param name="defValue"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.Append(System.Object,System.Object)">
            <summary>
            字符串拼接对象
            </summary>
            <param name="value0">当前字符串</param>
            <param name="value1">要拼接的对象</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.Append(System.Object,System.Object[])">
            <summary>
            字符串拼接对象
            </summary>
            <param name="value0">当前字符串</param>
            <param name="values">要拼接的多个对象</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ReplaceToNull(System.String,System.String[])">
            <summary>
            将多个指定字符替换成空字符串
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="value">当前字符串</param>
            <param name="oldValue">要被替换的字符串数组。</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.Replace(System.String,System.String[],System.String)">
            <summary>
            将多个指定字符替换成指定字符
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="value">当前字符串</param>
            <param name="oldValue">要被替换的字符串数组。</param>
            <param name="newValue">要替换出现的所有 oldValue 的字符串。</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.Trims(System.String)">
            <summary>
            移除所有前导空白字符和尾部空白字符。
            <para>value 为空时则返回 null</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.SplitByIndex(System.String,System.String,System.Int32)">
            <summary>
            根据指定拆分符拆分字符串（不移除空项），并返回指定索引位置的内容
            <para>value 为空或截取索引出错时则返回 null</para>
            </summary>
            <param name="value">字符串</param>
            <param name="separator">拆分符</param>
            <param name="index">数组中的索引位置</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.Substrings(System.String,System.Int32,System.String)">
            <summary>
            截取字符串
            <para>区分中英文字符长度，中文按1:2，英文按1:1 计算长度</para>
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="value">字符串</param>
            <param name="length">截取长度（区分中、英）</param>
            <param name="appendWord">附加内容</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToSBC(System.String)">
            <summary>
            转全角的函数(SBC case)
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="value"></param>
            <returns>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToDBC(System.String)">
            <summary>
            转半角的函数(DBC case)
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="value"></param>
            <returns>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToDbValue(System.Object)">
            <summary>
            判断对象是否为null
            <para>是：返回 DBNull.Value</para>
            <para>否：返回当前对象</para>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToTitleCase(System.String)">
            <summary>
            将指定的字符串转换为词首字母大写
            <para>codec_long_name --> Codec_Long_Name</para>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.Split(System.String,System.String)">
            <summary>
            根据指定拆分符拆分字符串（并去除空项）
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="value">字符串</param>
            <param name="separator">拆分符</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.Split(System.String,System.String[])">
            <summary>
            根据指定拆分符拆分字符串（并去除空项）
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="value">字符串</param>
            <param name="separator">拆分符</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.SplitByRegex(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            正则表达式：根据指定拆分符拆分字符串（并去除空项）
            <para>value 为空时则返回 null</para>
            </summary>
            <param name="value">字符串</param>
            <param name="pattern">要匹配的正则表达式模式</param>
            <param name="options">枚举值的一个按位组合，这些枚举值提供匹配选项，默认：忽略大小写</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.SplitByLength(System.String,System.Int32)">
            <summary>
            按指定字符长度进行拆分字符串
            </summary>
            <param name="value">字符串</param>
            <param name="segmentLength">指定长度，如：按每3个字符串进行拆分数组</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToStringArray(System.String,System.String,System.String[])">
            <summary>
            转换string[]
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="separator">拆分标识</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToIntArray(System.String,System.String,System.Int32[])">
            <summary>
            转换int[]
            </summary>
            <param name="value">要转换的字符串</param>
            <param name="separator">拆分标识</param>
            <param name="defValue">缺省值</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToDictionary(System.Enum)">
            <summary>
            枚举转字典集合
            </summary>
            <param name="em"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToDictionary(System.Data.DataTable)">
            <summary>
            DataTable 转字典集合（DataTable 的第一列为 KEY，第二列为 Value）
            <para>value 为空时则返回 null</para>
            <para>如果table 只有1列，key为索引，value为第一列</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToDictionary(System.Data.DataTable,System.String,System.String)">
            <summary>
            DataTable 转字典集合（可自定义列）
            <para>value 为空时则返回 null</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToDictionaryBySql(System.String)">
            <summary>
            转换为字典集合
            <para>分割符为逗号</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.ToListByRegex(System.String,System.String)">
            <summary>
            根据正则表达式将字符串拆分成集合
            </summary>
            <param name="value">要匹配的字符串</param>
            <param name="pattern">匹配规则</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.Arrange``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            整理返回集合
            <para>如果参数 list 数量大于 length，按 length 返回 list 内容</para>
            <para>如果参数 list 数量小与 length，按 length 返回 list 内容，不足部分按 T 默认值进行返回</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.GetNowTime(Macrosage.Utility.Enums.TimeFormat)">
            <summary>
            得到程序当前时间
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.SystemExtensionMethod.GetNowTime(System.String)">
            <summary>
            得到程序当前时间
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.ValidationMethod">
            <summary>
            类型是否为空判断
            </summary>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNull(System.String)">
            <summary>
            判断字符是否为空
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNull(System.Object)">
            <summary>
            判断 object 是否为 null 或 DBNull
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNull(System.Data.DataTable)">
            <summary>
            判断 DataTable 是否为空
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNull(System.Data.DataRowCollection)">
            <summary>
            判断 DataRowCollection 是否为空
            </summary>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNull(System.Data.DataRow[])">
            <summary>
            判断 DataRow[] 是否为空
            </summary>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNull(System.Data.DataRow)">
            <summary>
            判断 DataRow 是否为空
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNull(System.Data.DataSet)">
            <summary>
            判断DataSet是否为空
            </summary>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNull``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            判断 List&lt;T&gt; 是否为空
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNull``1(``0)">
            <summary>
            判断泛型是否为null
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNotNull(System.String)">
            <summary>
            判断字符是否为空
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNotNull(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNotNull(System.Data.DataTable)">
            <summary>
            
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNotNull(System.Data.DataRow[])">
            <summary>
            
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNotNull(System.Data.DataSet)">
            <summary>
            
            </summary>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNotNull``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.ValidationMethod.IsNotNull``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.SystemError">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.SystemError.StaticCode">
            <summary>
            系统消息编码 [待完善]
            </summary>
        </member>
        <member name="F:Macrosage.Utility.SystemError.StaticCode.DefaultMessage">
            <summary>
            默认值
            <para>code: 0</para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.SystemError.StaticCode.Success">
            <summary>
            所有成功
            <para>code: 10000</para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.SystemError.StaticCode.ServerBusy">
            <summary>
            服务器压力山大, 暂时无法为您提供服务, 请稍后再试！
            <para>code: 11001</para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.SystemError.StaticCode.ProgramException">
            <summary>
            程序发生异常
            <para>code: 13001</para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.SystemError.StaticCode.DataException">
            <summary>
            数据操作异常
            <para>code: 13002</para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.SystemError.StaticCode.Failure">
            <summary>
            该操作执行失败
            <para>code: 14002</para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.SystemError.StaticCode.LoginFailure">
            <summary>
            登录失败
            <para>code: 14007</para>
            </summary>
        </member>
        <member name="T:Macrosage.Utility.SystemError.DbMessage">
            <summary>
            [11xxx] 数据库异常信息
            </summary>
        </member>
        <member name="F:Macrosage.Utility.SystemError.DbMessage.ServerBusy">
            <summary>
            服务器压力山大, 暂时无法为您提供服务, 请稍后再试！
            <para>code: 11001</para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.SystemError.DbMessage.DbException">
            <summary>
            今天数据库有点吃不消了，请稍后再试试！
            <para>code: 11002</para>
            </summary>
        </member>
        <member name="T:Macrosage.Utility.SystemError.ApplicationExceptionMessage">
            <summary>
            [13xxx] 程序集错误消息
            </summary>
        </member>
        <member name="F:Macrosage.Utility.SystemError.ApplicationExceptionMessage.程序发生异常">
            <summary>
            code: 13001
            </summary>
        </member>
        <member name="F:Macrosage.Utility.SystemError.ApplicationExceptionMessage.数据操作异常">
            <summary>
            code: 13002
            </summary>
        </member>
        <member name="F:Macrosage.Utility.SystemError.ApplicationExceptionMessage.填写内容长度过长">
            <summary>
            code: 13003
            </summary>
        </member>
        <member name="T:Macrosage.Utility.SystemError.ApplicationFailureMessage">
            <summary>
            [14xxx] 程序内失败/错误 [如：影响行数为0 或 违背指定逻辑]
            </summary>
        </member>
        <member name="T:Macrosage.Utility.SystemError.SmsMessageCode">
            <summary>
            [900xx] 短信错误消息信息
            </summary>
        </member>
        <member name="T:Macrosage.Utility.SystemError.MailMessageCode">
            <summary>
            [901xx] 邮件错误消息信息
            </summary>
        </member>
        <member name="T:Macrosage.Utility.SystemError.CacheMessage">
            <summary>
            [909xx] 缓存错误消息
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Imaging.AnchorLocation">
            <summary>
            矩形选区停靠位置
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.AnchorLocation.LeftTop">
            <summary>
            左上
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.AnchorLocation.MiddleTop">
            <summary>
            中上
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.AnchorLocation.RightTop">
            <summary>
            右上
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.AnchorLocation.LeftMiddle">
            <summary>
            左中部
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.AnchorLocation.Middle">
            <summary>
            居中
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.AnchorLocation.RightMiddle">
            <summary>
            右中部
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.AnchorLocation.LeftBottom">
            <summary>
            左下部
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.AnchorLocation.MiddleBottom">
            <summary>
            中下部
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.AnchorLocation.RightBottom">
            <summary>
            右下
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Imaging.CropFilter">
            <summary>
            用于裁剪的图片处理过滤器
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Imaging.IImageFilter">
            <summary>
            图像处理过滤器接口
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Imaging.IImageFilter.Process(System.Drawing.Image,System.Boolean@)">
            <summary>
            对传入的inputImage进行处理
            </summary>
            <param name="inputImage">待处理的图像文件</param>
            <param name="isProcessed">是否被处理，否则返回原图</param>
            <returns>返回处理后的图像文件</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.CropFilter.#ctor(System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="cropArea">原图待裁剪的矩形选区</param>
            <param name="descWidth">裁剪后图像的宽度</param>
            <param name="descHeight">裁剪后图像的高度</param>
        </member>
        <member name="M:Macrosage.Utility.Imaging.CropFilter.Process(System.Drawing.Image,System.Boolean@)">
            <summary>
            对传入的inputImage进行裁剪
            </summary>
            <param name="inputImage">待处理的图像文件</param>
            <param name="isProcessed">是否被处理，否则返回原图</param>
            <returns>返回处理后的图像文件</returns>
        </member>
        <member name="P:Macrosage.Utility.Imaging.CropFilter.TargetSize">
            <summary>
            期望图像尺寸
            </summary>
            <value>The size of the target.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.CropFilter.CropArea">
            <summary>
            原图待裁剪的矩形选区
            </summary>
            <value>The crop area.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.CropFilter.InterpoliationMode">
            <summary>
            缩放或旋转图像时使用的算法
            </summary>
            <value>The interpoliation mode.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.CropFilter.SmoothingMode">
            <summary>
            缩放或旋转图像时使用的算法
            </summary>
            <value>The smoothing mode.</value>
        </member>
        <member name="T:Macrosage.Utility.Imaging.EXIFMetaDataService">
            <summary>
            照片信息处理
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.EXIFMetaDataService.EnabledEXIFIds">
            <summary>
            The enabled EXIF ids
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Imaging.EXIFMetaDataService.Read(System.IO.Stream)">
            <summary>
            读取图像的EXIF信息
            </summary>
            <param name="imageStream">图像文件流</param>
            <returns>返回读取的EXIF信息字典（key=PropertyItem.Id）</returns>
            <exception cref="T:System.ArgumentException">imageStream isn't validate;imageStream</exception>
        </member>
        <member name="M:Macrosage.Utility.Imaging.EXIFMetaDataService.Read(System.IO.Stream,System.Int32)">
            <summary>
            读取图像的EXIF信息
            </summary>
            <param name="imageStream">图像文件流</param>
            <param name="propId">16进制元数据Id</param>
            <returns>返回根据propId读取的EXIF信息</returns>
            <exception cref="T:System.ArgumentException">imageStream isn't validate;imageStream</exception>
        </member>
        <member name="M:Macrosage.Utility.Imaging.EXIFMetaDataService.GetValueOfType(System.Drawing.Imaging.PropertyItem)">
            <summary>
            以元数据值的对应类型来获取值
            </summary>
            <param name="propItem">要获取信息的图像文件元数据属性</param>
            <returns>System.string.</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.EXIFMetaDataService.GetValueOfType1(System.Byte[])">
            <summary>
            获取字节值
            </summary>
            <param name="value">元数据的值</param>
            <returns>System.string.</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.EXIFMetaDataService.GetValueOfType2(System.Byte[])">
            <summary>
            获取空终止 ASCII 字符串值
            </summary>
            <param name="value">元数据的值</param>
            <returns>System.string.</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.EXIFMetaDataService.GetValueOfType3(System.Byte[])">
            <summary>
            获取无符号的16 位整型值
            </summary>
            <param name="value">元数据的值</param>
            <returns>System.string.</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.EXIFMetaDataService.GetValueOfType4(System.Byte[])">
            <summary>
            获取无符号的32 位整型值
            </summary>
            <param name="value">元数据的值</param>
            <returns>System.string.</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.EXIFMetaDataService.GetValueOfType5(System.Byte[])">
            <summary>
            获取无符号的32位整型对数值
            </summary>
            <param name="value">元数据的值</param>
            <returns>System.string.</returns>
            <remarks>每一对都表示一个分数；第一个整数是分子，第二个整数是分母</remarks>
        </member>
        <member name="M:Macrosage.Utility.Imaging.EXIFMetaDataService.GetValueOfType7(System.Byte[],System.Int32)">
            <summary>
            获取有符号的32 位整型数值
            </summary>
            <param name="value">元数据的值</param>
            <param name="propId">元数据Id</param>
            <returns>System.string.</returns>
        </member>
        <member name="T:Macrosage.Utility.Imaging.ImageMetadata">
            <summary>
            图像元数据
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata.FormatGif">
            <summary>
            GIF图片类型
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata.FormatPng">
            <summary>
            PNG图片格式
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata.FormatBmp">
            <summary>
            BMP图片格式
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata.ColorTypeUnknown">
            <summary>
            颜色类型 未知
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata.stream">
            <summary>
            The stream
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata._width">
            <summary>
            The width
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata._height">
            <summary>
            The height
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata._bitsPerPixel">
            <summary>
            The bits per pixel
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata.colorType">
            <summary>
            The color type
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata.progressive">
            <summary>
            The progressive
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata.format">
            <summary>
            The format
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata.determineNumberOfImages">
            <summary>
            The determine number of images
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata.numberOfImageFrames">
            <summary>
            The number of image frames
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata.physicalHeightDpi">
            <summary>
            The physical height dpi
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata.physicalWidthDpi">
            <summary>
            The physical width dpi
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata.FORMAT_JPEG">
            <summary>
            JPEG图片格式
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata.FormatNames">
            <summary>
            图像格式名称
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ImageMetadata.MimeTypeStrings">
            <summary>
            图像MIME
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageMetadata.#ctor(System.IO.Stream)">
            <summary>
            构造函数
            </summary>
            <param name="stream">图像流</param>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageMetadata.Check(System.IO.Stream,System.String@,System.Int32@,System.Int32@)">
            <summary>
            获取图像信息
            </summary>
            <param name="inputStream">图像文件流</param>
            <param name="contentType">图像MIME类型</param>
            <param name="width">图像宽度</param>
            <param name="height">图像高度</param>
            <returns>正常获取数据返回true，否则返回false</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageMetadata.Check">
            <summary>
            检查传入的流是否为图片类型
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageMetadata.CheckBmp">
            <summary>
            Checks the BMP.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageMetadata.CheckGif">
            <summary>
            Checks the GIF.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageMetadata.CheckJpeg">
            <summary>
            Checks the JPEG.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageMetadata.CheckPng">
            <summary>
            Checks the PNG.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageMetadata.equals(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Equalses the specified a1.
            </summary>
            <param name="a1">The a1.</param>
            <param name="offs1">The offs1.</param>
            <param name="a2">The a2.</param>
            <param name="offs2">The offs2.</param>
            <param name="num">The num.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageMetadata.getIntBigEndian(System.Byte[],System.Int32)">
            <summary>
            Gets the int big endian.
            </summary>
            <param name="a">A.</param>
            <param name="offs">The offs.</param>
            <returns>System.int.</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageMetadata.getIntLittleEndian(System.Byte[],System.Int32)">
            <summary>
            Gets the int little endian.
            </summary>
            <param name="a">A.</param>
            <param name="offs">The offs.</param>
            <returns>System.int.</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageMetadata.getShortBigEndian(System.Byte[],System.Int32)">
            <summary>
            Gets the short big endian.
            </summary>
            <param name="a">A.</param>
            <param name="offs">The offs.</param>
            <returns>System.int.</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageMetadata.getShortLittleEndian(System.Byte[],System.Int32)">
            <summary>
            Gets the short little endian.
            </summary>
            <param name="a">A.</param>
            <param name="offs">The offs.</param>
            <returns>System.int.</returns>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ImageMetadata.Stream">
            <summary>
            图片数据流
            </summary>
            <value>The stream.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ImageMetadata.Width">
            <summary>
            图片宽度
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ImageMetadata.Height">
            <summary>
            图片高度
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ImageMetadata.BitsPerPixel">
            <summary>
            每像素的位点数
            </summary>
            <value>The bits per pixel.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ImageMetadata.Format">
            <summary>
            图片格式
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ImageMetadata.ColorType">
            <summary>
            颜色类型
            </summary>
            <value>The type of the color.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ImageMetadata.NumberOfImageFrames">
            <summary>
            图像帧数
            </summary>
            <value>The number of image frames.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ImageMetadata.FormatName">
            <summary>
            图片格式的名称
            </summary>
            <value>The name of the format.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ImageMetadata.MimeType">
            <summary>
            MIME类型
            </summary>
            <value>The type of the MIME.</value>
        </member>
        <member name="T:Macrosage.Utility.ImageProcessor">
            <summary>
            图像处理器
            </summary>
        </member>
        <member name="F:Macrosage.Utility.ImageProcessor._filters">
            <summary>
            The _filters
            </summary>
        </member>
        <member name="F:Macrosage.Utility.ImageProcessor.jpegQuality">
            <summary>
            The JPEG quality
            </summary>
        </member>
        <member name="M:Macrosage.Utility.ImageProcessor.Process(System.IO.Stream)">
            <summary>
            根据ImageSettings对图片进行 缩放/剪切/水印 等操作
            </summary>
            <param name="inputStream">图像文件流</param>
            <returns>System.IO.Stream.</returns>
            <exception cref="T:System.ArgumentException">inputStream isn't validate;inputStream</exception>
        </member>
        <member name="M:Macrosage.Utility.ImageProcessor.Resize(System.IO.Stream,System.Int32,System.Int32,Macrosage.Utility.Imaging.ResizeMethod)">
            <summary>
            缩放图像
            </summary>
            <param name="inputStream">图像文件流</param>
            <param name="width">缩放后的宽度</param>
            <param name="height">缩放后的高度</param>
            <param name="resizeMethod">缩放方式</param>
            <returns>返回缩放后的图像文件流</returns>
        </member>
        <member name="M:Macrosage.Utility.ImageProcessor.Crop(System.IO.Stream,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            裁剪图像
            </summary>
            <param name="inputStream">图像文件流</param>
            <param name="cropArea">原图待裁剪的矩形选区</param>
            <param name="descWidth">裁剪后图像的宽度</param>
            <param name="descHeight">裁剪后图像的高度</param>
            <returns>返回裁剪后的图像文件流</returns>
        </member>
        <member name="M:Macrosage.Utility.ImageProcessor.GetImageCodecInfo(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Gets ImageCodecInfo for the specified ImageFormat
            </summary>
            <param name="imageFormat">The ImageFormat of the picture.</param>
            <returns>System.Drawing.Imaging.ImageCodecInfo</returns>
        </member>
        <member name="M:Macrosage.Utility.ImageProcessor.IsGIFAnimation(System.Drawing.Image)">
            <summary>
            图像是否GIF动画
            </summary>
            <param name="image">待检测的图像</param>
            <returns>是GIF动画返回true，否则返回false</returns>
        </member>
        <member name="P:Macrosage.Utility.ImageProcessor.Filters">
            <summary>
            图像处理过滤器列表
            </summary>
            <value>The filters.</value>
        </member>
        <member name="P:Macrosage.Utility.ImageProcessor.JpegQuality">
            <summary>
            Jpeg压缩质量
            </summary>
            <value>The JPEG quality.</value>
            <remarks>取值区间0到100</remarks>
        </member>
        <member name="T:Macrosage.Utility.Imaging.ImageWatermarkFilter">
            <summary>
            图像水印过滤器
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Imaging.WatermarkFilterBase">
            <summary>
            水印过滤器基类
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.WatermarkFilterBase._opacity">
            <summary>
            The _opacity
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Imaging.WatermarkFilterBase.Process(System.Drawing.Image,System.Boolean@)">
            <summary>
            对传入的inputImage进行处理
            </summary>
            <param name="inputImage">待处理的图像文件</param>
            <param name="isProcessed">是否被处理，否则返回原图</param>
            <returns>返回处理后的图像文件</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.WatermarkFilterBase.IsPixelFormatIndexed(System.Drawing.Imaging.PixelFormat)">
            <summary>
            判断图片是否带有索引像素格式
            </summary>
            <param name="imgPixelFormat">原图片的PixelFormat</param>
            <returns><c>true</c> if [is pixel format indexed] [the specified img pixel format]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:Macrosage.Utility.Imaging.WatermarkFilterBase.AnchorLocation">
            <summary>
            水印所在位置
            </summary>
            <value>The anchor location.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.WatermarkFilterBase.Opacity">
            <summary>
            不透明度
            </summary>
            <value>The opacity.</value>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageWatermarkFilter.#ctor(System.String,Macrosage.Utility.Imaging.AnchorLocation)">
            <summary>
            构造函数
            </summary>
            <param name="watermarkImagePhysicalPath">作为水印的图像文件物理路径</param>
            <param name="anchorLocation">水印在图像上的停靠位置</param>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageWatermarkFilter.#ctor(System.Drawing.Image,Macrosage.Utility.Imaging.AnchorLocation)">
            <summary>
            构造函数
            </summary>
            <param name="watermarkImage">作为水印的图像文件</param>
            <param name="anchorLocation">水印在图像上的停靠位置</param>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageWatermarkFilter.#ctor(System.String,Macrosage.Utility.Imaging.AnchorLocation,System.Single)">
            <summary>
            构造函数
            </summary>
            <param name="watermarkImagePhysicalPath">作为水印的图像文件物理路径</param>
            <param name="anchorLocation">水印在图像上的停靠位置</param>
            <param name="opacity">不透明度</param>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageWatermarkFilter.#ctor(System.Drawing.Image,Macrosage.Utility.Imaging.AnchorLocation,System.Single)">
            <summary>
            构造函数
            </summary>
            <param name="watermarkImage">作为水印的图像文件</param>
            <param name="anchorLocation">水印在图像上的停靠位置</param>
            <param name="opacity">不透明度</param>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageWatermarkFilter.Process(System.Drawing.Image,System.Boolean@)">
            <summary>
            在传入的inputImage添加图像水印
            </summary>
            <param name="inputImage">待处理的图像文件</param>
            <param name="isProcessed">是否被处理，否则返回原图</param>
            <returns>返回处理后的图像文件</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageWatermarkFilter.GetWatermarkArea(System.Drawing.Image,System.Drawing.Image)">
            <summary>
            获取水印区域
            </summary>
            <param name="inputImage">待加水印的图像</param>
            <param name="watermarkImage">用为水印的图像</param>
            <returns>返回水印矩形区域</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ImageWatermarkFilter.BuildImageAttributes">
            <summary>
            Builds the image attributes.
            </summary>
            <returns>ImageAttributes.</returns>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ImageWatermarkFilter.WatermarkImage">
            <summary>
            作为水印的图像文件
            </summary>
            <value>The watermark image.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ImageWatermarkFilter.WatermarkImagePhysicalPath">
            <summary>
            作为水印的图像文件物理路径
            </summary>
            <value>The watermark image physical path.</value>
        </member>
        <member name="T:Macrosage.Utility.Imaging.RectangleUtil">
            <summary>
            矩形工具类
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Imaging.RectangleUtil.PositionRectangle(Macrosage.Utility.Imaging.AnchorLocation,System.Drawing.Rectangle,System.Drawing.Rectangle@)">
            <summary>
            按照停靠位置定位矩形选区（destRect）在矩形容器（sourceRect）中的位置
            </summary>
            <param name="anchorLocation">矩形选区停靠位置</param>
            <param name="sourceRect">矩形容器</param>
            <param name="destRect">矩形选区</param>
        </member>
        <member name="T:Macrosage.Utility.Imaging.ResizeFilter">
            <summary>
            用于缩放的图像处理过滤器
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ResizeFilter.#ctor(System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="width">缩放后的宽度</param>
            <param name="height">缩放后的高度</param>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ResizeFilter.#ctor(System.Int32,System.Int32,Macrosage.Utility.Imaging.ResizeMethod)">
            <summary>
            构造函数
            </summary>
            <param name="width">缩放后的宽度</param>
            <param name="height">缩放后的高度</param>
            <param name="resizeMethod">缩放方式</param>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ResizeFilter.#ctor(System.Int32,System.Int32,Macrosage.Utility.Imaging.ResizeMethod,Macrosage.Utility.Imaging.AnchorLocation)">
            <summary>
            构造函数
            </summary>
            <param name="width">缩放后的宽度</param>
            <param name="height">缩放后的高度</param>
            <param name="resizeMethod">缩放方式</param>
            <param name="anchorLocation">如需裁剪时，矩形选区停靠位置</param>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ResizeFilter.Process(System.Drawing.Image,System.Boolean@)">
            <summary>
            对传入的inputImage进行缩放
            </summary>
            <param name="inputImage">待处理的图像文件</param>
            <param name="isProcessed">是否被处理，否则返回原图</param>
            <returns>返回处理后的图像文件</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ResizeFilter.GetNewSize(System.Drawing.Image,System.Drawing.Size,Macrosage.Utility.Imaging.ResizeMethod,System.Drawing.Size@)">
            <summary>
            计算实际缩放后的图像尺寸
            </summary>
            <param name="img">The image to resize</param>
            <param name="requestedSize">请求缩放的图像尺寸</param>
            <param name="resizeMethod">图像缩放方式</param>
            <param name="bitmapSize">推荐输出的bitmap尺寸</param>
            <returns>返回实际缩放后的图像尺寸</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.ResizeFilter.GetLargestInset(System.Drawing.Rectangle,System.Single,Macrosage.Utility.Imaging.AnchorLocation)">
            <summary>
            按照期望的宽高比获取sourceRect中最大矩形区域
            </summary>
            <param name="sourceRect">源矩形区域</param>
            <param name="desiredAspect">期望的宽高比</param>
            <param name="anchorLocation">矩形选区停靠位置</param>
            <returns>返回在sourceRect内满足desiredAspect的最大矩形区域</returns>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ResizeFilter.TargetSize">
            <summary>
            期望图像尺寸
            </summary>
            <value>The size of the target.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ResizeFilter.ResizeMethod">
            <summary>
            图像缩放方式
            </summary>
            <value>The resize method.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ResizeFilter.AnchorLocation">
            <summary>
            矩形选区停靠位置
            </summary>
            <value>The anchor location.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ResizeFilter.InterpoliationMode">
            <summary>
            缩放或旋转图像时使用的算法
            </summary>
            <value>The interpoliation mode.</value>
        </member>
        <member name="P:Macrosage.Utility.Imaging.ResizeFilter.SmoothingMode">
            <summary>
            缩放或旋转图像时使用的算法
            </summary>
            <value>The smoothing mode.</value>
        </member>
        <member name="T:Macrosage.Utility.Imaging.ResizeMethod">
            <summary>
            图像缩放方式
            </summary>
            <remarks>不执行放大操作</remarks>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ResizeMethod.Absolute">
            <summary>
            按绝对尺寸缩放
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ResizeMethod.KeepAspectRatio">
            <summary>
            保持原图像宽高比缩放
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Imaging.ResizeMethod.AbsoluteCrop">
            <summary>
            裁剪图像
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Imaging.TextWatermarkFilter">
            <summary>
            文字水印过滤器
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Imaging.TextWatermarkFilter.#ctor(System.String,Macrosage.Utility.Imaging.AnchorLocation)">
            <summary>
            构造函数
            </summary>
            <param name="text">水印文字</param>
            <param name="anchorLocation">水印在图像上的停靠位置</param>
        </member>
        <member name="M:Macrosage.Utility.Imaging.TextWatermarkFilter.#ctor(System.String,Macrosage.Utility.Imaging.AnchorLocation,System.Single)">
            <summary>
            构造函数
            </summary>
            <param name="text">水印文字</param>
            <param name="anchorLocation">水印在图像上的停靠位置</param>
            <param name="opacity">不透明度</param>
        </member>
        <member name="M:Macrosage.Utility.Imaging.TextWatermarkFilter.Process(System.Drawing.Image,System.Boolean@)">
            <summary>
            在传入的inputImage添加文字水印
            </summary>
            <param name="inputImage">待处理的图像文件</param>
            <param name="isProcessed">是否被处理，否则返回原图</param>
            <returns>返回处理后的图像文件</returns>
        </member>
        <member name="M:Macrosage.Utility.Imaging.TextWatermarkFilter.GetWatermarkArea(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Font@)">
            <summary>
            获取水印区域
            </summary>
            <param name="graphics">画布</param>
            <param name="inputImage">图像</param>
            <param name="watermarkFont">水印文字使用的字体</param>
            <returns>返回水印矩形区域</returns>
        </member>
        <member name="P:Macrosage.Utility.Imaging.TextWatermarkFilter.Text">
            <summary>
            水印文字
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Assist.IMappingTrigger">
            <summary>
            数据映射触发接口
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Assist.IObjectAccessor">
            <summary>
            对象访问器
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.IObjectAccessor.Create">
            <summary>
            创建一个实体对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Assist.IObjectAccessor.Item(System.String)">
            <summary>
            获取对象指定成员对象的属性读写器
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Assist.IObjectAccessor.Item(System.Int32)">
            <summary>
            获取对象指定成员对象的属性读写器
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Assist.IObjectAccessor.MetaInfo">
            <summary>
            对象元数据
            </summary>
            <returns></returns>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Assist.IObjectAccessor.InstanceType">
            <summary>
            实例类型
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Assist.IObjectAccessor`1">
            <summary>
            对象访问器
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.IObjectAccessor`1.Create">
            <summary>
            创建一个类型为实体对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Assist.IObjectAccessor`1.Item(System.String)">
            <summary>
            获取对象指定成员对象的值
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Assist.IObjectAccessor`1.Item(System.Int32)">
            <summary>
            获取对象指定成员对象的属性读写器
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Assist.IPropertyAccessor">
            <summary>
            实体对象的取值或赋值
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.IPropertyAccessor.SetValue(System.Object,System.Object)">
            <summary>
            向对象的目标属性赋值
            </summary>
            <param name="handler">引用的对象</param>
            <param name="value">将<paramref name="value"/>赋值给对象的属性</param>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.IPropertyAccessor.GetValue(System.Object)">
            <summary>
            获取对象的目标属性的值
            </summary>
            <param name="handler">引用的对象</param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Assist.IPropertyAccessor`1">
            <summary>
            实体对象的取值或赋值
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.IPropertyAccessor`1.SetValue(`0,System.Object)">
            <summary>
            向对象的目标属性赋值
            </summary>
            <param name="handler">引用的对象</param>
            <param name="value">将<paramref name="value"/>赋值给对象的属性</param>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.IPropertyAccessor`1.GetValue(`0)">
            <summary>
            获取对象的目标属性的值
            </summary>
            <param name="handler">引用的对象</param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Assist.MapperException">
            <summary>
            数据对象映射异常
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.MapperException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.MapperException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.MapperException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Assist.ObjectAccessor`1">
            <summary>
            对象访问器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.ObjectAccessor`1.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.ObjectAccessor`1.#ctor(System.String)">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.ObjectAccessor`1.#ctor(Macrosage.Utility.Mapper.Metadata.IMetaInfo)">
            <summary>
            初始化
            </summary>
            <param name="metaInfo">元数据</param>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.ObjectAccessor`1.AppendProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
            添加需要映射的属性成员。
            </summary>
            <param name="propertyExp"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.ObjectAccessor`1.AppendProperty(Macrosage.Utility.Mapper.Metadata.IMetaPropertyInfo)">
            <summary>
            添加需要映射的属性成员。
            </summary>
            <param name="propertyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.ObjectAccessor`1.AutoAppendProperty">
            <summary>
            自动映射实体属性
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.ObjectAccessor`1.Complete">
            <summary>
            完成映射（生命周期内只能调用一次）。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.ObjectAccessor`1.Complete(System.Func{Macrosage.Utility.Mapper.Assist.ObjectAccessor{`0},System.Type})">
            <summary>
            完成映射（生命周期内只能调用一次）。
            </summary>
            <param name="builder">自定义类型<typeparamref name="T"/>的实例化。</param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Assist.ObjectAccessorFinder">
            <summary>
            映射对象搜索器
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.ObjectAccessorFinder.AddFinder(Macrosage.Utility.Mapper.Assist.ObjectAccessorFinder)">
            <summary>
            新增一个映射对象搜索器
            </summary>
            <param name="finder"></param>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.ObjectAccessorFinder.ResetLastFinder(Macrosage.Utility.Mapper.Assist.ObjectAccessorFinder)">
            <summary>
            重置默认的映射对象搜索器
            </summary>
            <param name="finder"></param>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.ObjectAccessorFinder.FindObjAccessor``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.ObjectAccessorFinder.FindAccessor``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:Macrosage.Utility.Mapper.Assist.MapperException"></exception>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Assist.PropertyAccessor`1">
            <summary>
            实体对象内部的取值或赋值实现。
            </summary>
            <typeparam name="T"></typeparam>
            <remarks>此对象通过Lambda表达示树编译成委托实现对象属性的取值或赋值。</remarks>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.PropertyAccessor`1.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            
            </summary>
            <param name="propertyInfo"></param>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Assist.PropertyExpression">
            <summary>
            实体属性（lambda）表达式。
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.PropertyExpression.ExtractMemberExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            获取表达未成员类型信息
            </summary>
            <param name="exp"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Assist.PropertyExpression.ExtractMemberExpression(System.Linq.Expressions.Expression)">
            <summary>
            获取表达未成员类型信息
            </summary>
            <param name="exp"></param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.Mapper.DataSource.DataReaderSourceProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.DataSource.IDataSourceReader.Ordinal(System.String[])">
            <summary>
            fields成员映射到数据的下标，如果fields中的成员不被数据源包含，则下标为-1。
            </summary>
            <param name="fields">数据成员</param>
            <returns>依据fields的顺序，返回各个成员在数据源中的下标</returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.DataSource.IDataSourceReader.Read">
            <summary>
            读取数据
            </summary>
            <returns>依据ordinal的顺序返回data，没有数据和元素用null标记。</returns>
        </member>
        <member name="P:Macrosage.Utility.Mapper.DataSource.IDataSourceReader.Count">
            <summary>
            获取数据中数据集合的数量
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Entity.DataState">
            <summary>
            数据状态
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Mapper.Entity.DataState.New">
            <summary>
            数据为新建状态，在执行保存操作时只会插入的方式
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Mapper.Entity.DataState.Modify">
            <summary>
            数据为修改状态，在执行保存操作时只会修改的方式，此状态下要求对象必须拥有主键值
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Mapper.Entity.DataState.NewOrModify">
            <summary>
            新建或修改状态，在执行保存时会在数据库中判断数据（主键）如果存在则更新数据，否则插入数据。
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Metadata.IMetaPropertyInfo">
            <summary>
            元数据属性描述
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Metadata.IMetaPropertyInfo.MetaInfo">
            <summary>
            <see cref="T:Macrosage.Utility.Mapper.Metadata.IMetaInfo"/>实例
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Metadata.IMetaPropertyInfo.PropertyName">
            <summary>
            属性名称
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Metadata.IMetaPropertyInfo.PropertyInfo">
            <summary>
            映射的对象属性
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Entity.IDbIncrementMetaPropertyInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Metadata.IMetaInfo">
            <summary>
            元数据描述
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Metadata.IMetaInfo.IndexOf(System.String)">
            <summary>
            获取指定属性的下标
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Metadata.IMetaInfo.GetPropertyNames">
            <summary>
            所有属性名称
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Metadata.IMetaInfo.GetProperties">
            <summary>
            获取所有的属性
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Metadata.IMetaInfo.AddPropertyInfo(Macrosage.Utility.Mapper.Metadata.IMetaPropertyInfo)">
            <summary>
            添加属性
            </summary>
            <param name="metaPropertyInfo"></param>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Metadata.IMetaInfo.RemovePropertyInfo(Macrosage.Utility.Mapper.Metadata.IMetaPropertyInfo)">
            <summary>
            移除属性
            </summary>
            <param name="metaPropertyInfo"></param>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Metadata.IMetaInfo.MakeReadonly">
            <summary>
            元数据标记为只读
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Metadata.IMetaInfo.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Metadata.IMetaInfo.EntityType">
            <summary>
            实体类型
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Metadata.IMetaInfo.PropertyCount">
            <summary>
            属性个数
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Metadata.IMetaInfo.Item(System.Int32)">
            <summary>
            获取指定的属性
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Metadata.IMetaInfo.Item(System.String)">
            <summary>
            获取指定的属性
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Metadata.IMetaInfo.Item(System.Reflection.PropertyInfo)">
            <summary>
            获取指定的属性
            </summary>
            <param name="propertyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Metadata.MetaInfo.SafeList">
            <summary>
            获取propertyList是一个线程访问安全的集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.IDbMetaInfo.IsKey(System.String)">
            <summary>
            验证是否为主键主字段
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.IDbMetaInfo.GetKeys">
            <summary>
            获取所有的主键字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.IDbMetaInfo.GetColumnNames">
            <summary>
            获取所有的字段
            </summary>
            <returns></returns>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Entity.IDbMetaInfo.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Entity.IDbMetaInfo.Increment">
            <summary>
            自动增长序列
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Entity.IDbMetaInfo.KeyCount">
            <summary>
            表中主键的数量
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Entity.IDbMetaInfo.ColumnCount">
            <summary>
            表中字段的数量
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Entity.EntityBuilder">
            <summary>
            实体生成器。
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.EntityBuilder.ResetCreater(System.Func{Macrosage.Utility.Mapper.Entity.EntityBuilder})">
            <summary>
            设置新的实例化方法
            </summary>
            <param name="creater"></param>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.EntityBuilder.BuildEntityClass(System.Type,Macrosage.Utility.Mapper.Metadata.IMetaInfo)">
            <summary>
            生成一个实体的继承类，重写实体中属性成员，并继承IEntity接口。
            </summary>
            <param name="baseType"></param>
            <param name="metaInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.EntityBuilder.BuildEntityType(System.Type,Macrosage.Utility.Mapper.Metadata.IMetaInfo)">
            <summary>
            生成一个继承自实体的类
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.EntityBuilder.GenerateCode(System.CodeDom.CodeCompileUnit)">
            <summary>
            生成C#语法代码(文本)
            </summary>
            <param name="unit"></param>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Entity.FieldFlag">
            <summary>
            用于记录成员字段是否被修改过。成员字段有一个下标编号，这是一个在编译时确定从零开始的编码。
            <remarks>这种做法有利于节省空间，带来性能上的提高(内部采用位运算实现)。依据字段的多少来空间的开销（计算方法：(int)Math.Ceiling((double)size / 8)），此公式可以计算出成员字段需用多少个字节来做记录。</remarks>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Mapper.Entity.FieldFlag.ItemSize">
            <summary>
            数组中的一个对象只存31个比特位。
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.FieldFlag.#ctor(System.Int32)">
            <summary>
            初始化一个可以存放大数据量的数组。
            </summary>
            <param name="size">二进制位大小，size = 32 * 返回值数组长度。因为int占用8个字节，所有二进制位大小为32。</param>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.FieldFlag.BitCompute(System.Int32,System.Int32@)">
            <summary>
            计算<paramref name="index"/>在数组中的比特位，并返回<paramref name="index"/>对应的比特位。
            </summary>
            <param name="index">比特位的下标。</param>
            <param name="arrayIndex">数组下标。一个很大的值需要拆分成一个数组保存，如：参数<paramref name="index"/>等于 9 它大于8了，所以这个值会放在数组下标为1的byte中的第0个比特位。</param>
            <returns>计算出的这个比特位的值</returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.FieldFlag.HasMarked">
            <summary>
            检查指定比特位的标记。
            </summary>
            <returns>任意比特位已被标记时返回true，false则表示所有比特位均未被标记。</returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.FieldFlag.HasMarked(System.Int32)">
            <summary>
            检查指定比特位的标记。
            </summary>
            <param name="index">比特位</param>
            <returns>指定比特位已被标记时返回true，false则表示未被标记。</returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.FieldFlag.IndexArray">
            <summary>
            获取所有被标记的比特位的位置下标。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.FieldFlag.Mark(System.Int32)">
            <summary>
            在指定的比特位，将其值标记为 1。
            </summary>
            <param name="index">比特位位置。</param>
            <remarks>
            下标为3（第4个比特位）
            00000000000000000000000000001000
            </remarks>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.FieldFlag.UnMark(System.Int32)">
            <summary>
            在指定的比特位，将其值标记为 0（取消标记）。
            </summary>
            <param name="index">比特位位置。</param>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.FieldFlag.Clean">
            <summary>
            清除所有比特位标记。
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Entity.FieldFlag.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Entity.FieldFlag.MarkedCount">
            <summary>
            比特位上值为 1 的个数
            </summary>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Entity.IEntity">
            <summary>
            数据实体映射接口
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.IEntity.IsSetted(System.Int32)">
            <summary>
            验证成员字段是否过赋值操作
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.IEntity.AnySetted">
            <summary>
            检测任意一个成员字段是否有赋值操作
            </summary>
            <returns></returns>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Entity.IEntity.OperationState">
            <summary>
            实体状态
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Mapper.Entity.IEntity.EntityType">
            <summary>
            实体类型
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.ObjectAccessorExtenssions.Create``1">
            <summary>
            新建一个<see cref="T:Macrosage.Utility.Mapper.Assist.IObjectAccessor"/>对象。
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.ObjectAccessorExtenssions.Create``1(System.String)">
            <summary>
            新建一个<see cref="T:Macrosage.Utility.Mapper.Assist.IObjectAccessor"/>对象。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.ObjectAccessorExtenssions.AppendProperty``1(Macrosage.Utility.Mapper.Assist.ObjectAccessor{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Boolean)">
            <summary>
            添加属性与表字段的映射
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dataMapper"></param>
            <param name="propertyExp"></param>
            <param name="propertyName"></param>
            <param name="isKey"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.ObjectAccessorExtenssions.Increment``1(Macrosage.Utility.Mapper.Assist.ObjectAccessor{``0})">
            <summary>
            标识当前添加的字段为自动增长标识
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dataMapper"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.ObjectAccessorExtenssions.Increment``1(Macrosage.Utility.Mapper.Assist.ObjectAccessor{``0},System.String)">
            <summary>
            标识当前添加的字段为自动增长标识
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dataMapper"></param>
            <param name="incrementName"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.ObjectAccessorExtenssions.Increment``1(Macrosage.Utility.Mapper.Assist.ObjectAccessor{``0},System.String,System.Int32)">
            <summary>
            标识当前添加的字段为自动增长标识
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dataMapper"></param>
            <param name="incrementName"></param>
            <param name="startVal"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.Entity.ObjectAccessorExtenssions.CompleteWithEntity``1(Macrosage.Utility.Mapper.Assist.ObjectAccessor{``0})">
            <summary>
            完成映射，生成一个继承于<typeparamref name="T"/>和<see cref="T:Macrosage.Utility.Mapper.Entity.IEntity"/>的子类。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dataMapper"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.MapGetAccessor.GetAccessor(System.Type)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.Mapper.MapGetAccessor.GetAccessor``1">
            <summary>
            获取IMapper&lt;<typeparamref name="T"/>&gt;
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.Mapper.Timestamp">
            <summary>
            基于格林威志的Unix时间截
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Mapper.TypeMappers.CollectionTypeMaper`1._instanceType">
            <summary>
            创建集合实例的类型描述
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Mapper.TypeMappers.CollectionTypeMaper`1._iCollectionType">
            <summary>
            集合接口类型描述
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Mapper.TypeMappers.CollectionTypeMaper`1._genericCollectionConvert">
            <summary>
            适用于泛型的集合转换
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Mapper.TypeMappers.DictionaryTypeMapperBase`1">
            <summary>
            字典转换的基类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Macrosage.Utility.Mapper.TypeMappers.DictionaryTypeMapper`2">
            <summary>
            针对<see cref="T:System.Collections.Generic.Dictionary`2"/>转换的优化
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:Macrosage.Utility.Mapper.TypeMappers.HashtableTypeMapper">
            <summary>
            针对<see cref="T:System.Collections.Hashtable"/>转换的优化
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Mapper.TypeMappers.CommonDictionaryTypeMapper`1">
            <summary>
            通用字典的转换（包括支持<see cref="T:Macrosage.Utility.Mapper.TypeMappers.HashtableTypeMapper"/>/<see cref="T:Macrosage.Utility.Mapper.TypeMappers.DictionaryTypeMapper`2"/>所支持的）
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Macrosage.Utility.Mapper.TypeMappers.CommonDictionaryTypeMapper`1.iDicType">
            <summary>
            字典接口信息描述
            </summary>
        </member>
        <member name="F:Macrosage.Utility.Mapper.TypeMappers.CommonDictionaryTypeMapper`1.genericDicConvert">
            <summary>
            适用于泛型的集合的初始化
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Models.CropPicture.CaptureImageModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.CropPicture.CaptureImageModel.ClientId">
            <summary>
            客户端唯一标示，建议guid，便于服务器执行完可通知客户端
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.CropPicture.CaptureImageModel.Height">
            <summary>
            缩略图高度
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.CropPicture.CaptureImageModel.Width">
            <summary>
            缩略图宽度
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.CropPicture.CaptureImageModel.AnnexName">
            <summary>
            上传文件名
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Models.EditorUpload.UploadConfigModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.UploadConfigModel.PathFormat">
            <summary>
            文件命名规则
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.UploadConfigModel.UploadFieldName">
            <summary>
            上传表单域名称
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.UploadConfigModel.SizeLimit">
            <summary>
            上传大小限制
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.UploadConfigModel.AllowExtensions">
            <summary>
            上传允许的文件格式
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.UploadConfigModel.Base64">
            <summary>
            文件是否以 Base64 的形式上传
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.UploadConfigModel.Base64Filename">
            <summary>
            Base64 字符串所表示的文件名
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.UploadConfigModel.IsCrop">
            <summary>
            是否裁剪
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.UploadConfigModel.IsSingle">
            <summary>
            是否单个对象
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.UploadConfigModel.CropList">
            <summary>
            裁剪集合
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Models.EditorUpload.CropModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.CropModel.ImageWidth">
            <summary>
            原图高
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.CropModel.ImageHeight">
            <summary>
            原图宽
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.CropModel.ImageX">
            <summary>
            选择 X 轴
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.CropModel.ImageY">
            <summary>
            选择 Y 轴
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.CropModel.DescWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.CropModel.DescHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.CropModel.ImageSrc">
            <summary>
            客户端提交图片网络路径
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.EditorUpload.CropModel.CropFileName">
            <summary>
            裁剪后生成文件名
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Models.EditorUpload.UploadResultModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.Models.EditorUpload.UploadResultModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Models.EditorUpload.ResultState">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Models.EditorUpload.UploadState">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Models.Ftp.UploadFileModel">
            <summary>
            上传文件实体
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadFileModel.AnnexName">
            <summary>
            上传文件名，赋值后自动得到 AnnexExt 属性值
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadFileModel.AnnexExt">
            <summary>
            上传文件后缀名，先给AnnexName赋值，成功后自动获取文件后缀，直接调用Get获取即可
            <para>返回值：null 或 小写的准确后缀名</para>
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadFileModel.FileExtType">
            <summary>
            文件后缀所属类型
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadFileModel.Size">
            <summary>
            文件大小 kb
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadFileModel.DataUrl">
            <summary>
            返回原图存入数据库路径
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadFileModel.WebUrl">
            <summary>
            返回原图网络可访问路径
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadFileModel.UploadTime">
            <summary>
            上传耗时，为空则不返回
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadFileModel.ClientId">
            <summary>
            客户端唯一标示，为空则不返回，建议guid，便于服务器执行完可通知客户端
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadFileModel.Height">
            <summary>
            图片高度，为空则不返回
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadFileModel.Width">
            <summary>
            图片宽度，为空则不返回
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadFileModel.ResizedDataUrl">
            <summary>
            返回缩略图存入数据库路径
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadFileModel.ResizedWebUrl">
            <summary>
            返回缩略图网络可访问路径
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadFileModel.ResizedHeight">
            <summary>
            缩略图图片高度，为空则不返回
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadFileModel.ResizedWidth">
            <summary>
            缩略图图片宽度，为空则不返回
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadFileModel.ResizedAnnexName">
            <summary>
            缩略图名称
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Models.Ftp.UploadImageBase64Model">
            <summary>
            上传图片base64实体
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadImageBase64Model.AnnexName">
            <summary>
            上传文件名，赋值后自动得到 AnnexExt 属性值
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadImageBase64Model.ClientId">
            <summary>
            客户端唯一标示，为空则不返回，建议guid，便于服务器执行完可通知客户端
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.Ftp.UploadImageBase64Model.ImageBase64">
            <summary>
            图片的base64字符串
            </summary>
        </member>
        <member name="T:Macrosage.Utility.Models.ResultJsonModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.ResultJsonModel.Result">
            <summary>
            json返回值
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.ResultJsonModel.Msg">
            <summary>
            json返回消息
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.ResultJsonModel.Data">
            <summary>
            json返回数据
            </summary>
        </member>
        <member name="P:Macrosage.Utility.Models.ResultJsonModel.EnumType">
            <summary>
            枚举对象
            <para>对其进行赋值时，自动将枚举值覆盖 Result 原有值上。</para>
            </summary>
        </member>
        <member name="T:Macrosage.Utility.UtilsBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsBase.QrCode(System.String,System.Int32)">
            <summary>
            根据字符返回二维码
            </summary>
            <param name="data"></param>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.UtilsBase.ImageToBase64(System.String,System.Boolean,System.Drawing.Imaging.ImageFormat)">
            <summary>
            根据图片转base64string
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsBase.ImageBase64ToStream(System.String)">
            <summary>
            根据 image base64 字符串转流
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.UtilsBase.ImageBase64ToBitmap(System.String)">
            <summary>
            根据 image base64 字符串转 Bitmap
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.UtilsBase.RandomNumber(System.Int32)">
            <summary>
            生成纯数字随机数
            </summary>
            <param name="length">待生成的位数</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.UtilsBase.RandomNumberChar(System.Int32)">
            <summary>
            生成字母、数字混合随机数
            </summary>
            <param name="length">待生成的位数</param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.UtilsBase.ShortUrl(System.String)">
            <summary>
            短网址生成(该方法会生成4组字符串,本项目默认采用数组第一个值)如：ShortUrl("abc")[0]
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsBase.MapPath(System.String)">
            <summary>
            获得当前绝对路径
            </summary>
            <param name="strPath">指定的路径</param>
            <returns>绝对路径</returns>
        </member>
        <member name="M:Macrosage.Utility.UtilsBase.FileSaveLocation(System.String)">
            <summary>
            
            </summary>
            <param name="strPath"></param>
            <returns></returns>
        </member>
        <member name="M:Macrosage.Utility.UtilsBase.GetIP">
            <summary>
            获得当前页面客户端的IP
            </summary>
            <returns>当前页面客户端的IP</returns>
        </member>
        <member name="P:Macrosage.Utility.UtilsBase.LoadTongJiCode">
            <summary>
            项目获取统计代码方法
            <para>详历项目组使用</para>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.UtilsSupplementMethod">
            <summary>
            补充方法类
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsSupplementMethod.ToJosnByReplaceKeyChar(System.Object)">
            <summary>
            去除Josn中Html的转义
            <para>value 为空时则返回 null</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsSupplementMethod.ToFormData(System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            将字典数据转换为 formdata 数据
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsSupplementMethod.ToJsonData(System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            将字典数据转换为 jsondata 数据
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsSupplementMethod.ToXmlData(System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            将字典数据转换为 xmldata 数据
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsSupplementMethod.ToRequestFormData(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            将字典数据转换为 formdata 数据
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsSupplementMethod.ToRequestFormDataAuth(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            将字典数据转换为 formdata 数据
            <para>此方法追加授权信息参数</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsSupplementMethod.ToRequestFormDataAuth(Newtonsoft.Json.Linq.JObject)">
            <summary>
            将 JObject 转换为 formdata 数据
            <para>此方法追加授权信息参数</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsSupplementMethod.ToRequestJsonData(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            将字典数据转换为 jsondata 数据
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsSupplementMethod.ToRequestJsonDataAuth(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            将字典数据转换为 jsondata 数据
            <para>此方法追加授权信息参数</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsSupplementMethod.ToRequestJsonDataAuth(Newtonsoft.Json.Linq.JObject)">
            <summary>
            组织后台 jsondata 提交数据
            <para>此方法追加授权信息参数</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsSupplementMethod.ToRequestXmlData(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            将字典数据转换为 xmldata 数据
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsSupplementMethod.ToRequestXmlDataAuth(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            将字典数据转换为 xmldata 数据
            <para>此方法追加授权信息参数</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsSupplementMethod.ToRequestXmlData(Newtonsoft.Json.Linq.JObject)">
            <summary>
            组织后台 xmldata 数据 [暂时无法使用]
            <para>此方法追加授权信息参数</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsSupplementMethod.AppendRequestFormDataToken(System.String)">
            <summary>
            追加 formdata 授权信息
            <para>此方法追加授权信息参数</para>
            </summary>
        </member>
        <member name="M:Macrosage.Utility.UtilsSupplementMethod.GetAuthorize">
            <summary>
            返回授权信息集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:Macrosage.Utility.MsCacheNameBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:Macrosage.Utility.MsCacheNameBase.UsersOnlineData">
            <summary>
            个人登陆缓存总集合
            </summary>
        </member>
        <member name="F:Macrosage.Utility.MsCacheNameBase.UsersOnlineKey">
            <summary>
            映射邮箱与咕噜号缓存
            </summary>
        </member>
        <member name="F:Macrosage.Utility.MsCacheNameBase.GetOnlineUser">
            <summary>
            当前登录用户 缓存Key
            <para>GetOnlineUser_{唯一标示}_ByGuruCv</para>
            <para>实体CvLoginCacheModel</para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.MsCacheNameBase.GetOnlinePlatformData">
            <summary>
            平台信息
            <para>GetPlatformData</para>
            <para></para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.MsCacheNameBase.GetOnlineLastPlId">
            <summary>
            最后登陆平台编号
            <para>GetOnlineLastPlId_{唯一标示}</para>
            <para></para>
            </summary>
        </member>
        <member name="F:Macrosage.Utility.MsCacheNameBase.UserLoginErrorCount">
            <summary>
            记录用户登录出错次数
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.CompanyNature">
            <summary>
            公司类型
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.IndustryType">
            <summary>
            行业类型
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.IndustryTypeForeign">
            <summary>
            行业类型
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.CompanySize_Where">
            <summary>
            公司规模(只限用于简历筛选)
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.CompanySize">
            <summary>
            公司规模
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.AdminName">
            <summary>
            管理员类型
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.Political">
            <summary>
            政治面貌
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.StartingToWork_Where">
            <summary>
            工作年限(只用于简历筛选)
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.StartingToWork">
            <summary>
            工作年限
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.GoToWorkType">
            <summary>
            职业状态
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.HighestEducation">
            <summary>
            教育阶段
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.Admissions">
            <summary>
            招生类型
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.SchoolRecord">
            <summary>
            学历
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.SchoolRecordState">
            <summary>
            教育阶段状态
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.HighSchoolType">
            <summary>
            学校类型是否是211,985
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.PathwaysString">
            <summary>
            学习途径
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.PostLevels">
            <summary>
            职位级别
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.MaxSalary">
            <summary>
            期望月薪
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.AuditonStatusByDictionary">
            <summary>
            面试通知阶段
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.ResumeStatusByDictionary">
            <summary>
            招聘阶段
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.ResumeStatusByDictionary_S">
            <summary>
            招聘阶段
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.ResumeStatusByDictionary_OK">
            <summary>
            招聘阶段
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.ExamTypeChinese">
            <summary>
            普通话
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.ExamTypeJapanese">
            <summary>
            日语
            </summary>
            
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.ExamTypeFrench">
            <summary>
            法语
            </summary>
        </member>
        <member name="P:Macrosage.Utility.EnumHelperBase.ExamTypeRussian">
            <summary>
            俄语
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.NationType">
            <summary>
            七大洲
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.NationType1">
             <summary>
            系统筛选条件
             </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.SocietyRelationType">
            <summary>
            社会关系
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.FellowshipType">
            <summary>
            交情程度
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.CityType">
            <summary>
            一级城市
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.LiquorType">
            <summary>
            酒量
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.HealthType">
            <summary>
            身体状况
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.SchoolType">
            <summary>
            办学类型
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.EthnicType">
            <summary>
            民族
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.ProcedureType">
            <summary>
            存储过程名称
            </summary>
        </member>
        <member name="F:Macrosage.Utility.EnumHelperBase.ProcedureType.Proc_Paging">
            <summary>
            分页查询通用存储过程
            </summary>
        </member>
        <member name="F:Macrosage.Utility.EnumHelperBase.ProcedureType.DataRecursive">
            <summary>
            树形结构查询通用存储过程
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.ClientControlType">
            <summary>
            html控件类型
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.JobType">
            <summary>
            用工类型
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.RecruitmentType">
            <summary>
            招聘类型
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.IsExaminationPapers">
            <summary>
            甄选模型
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.RecruitmentState">
            <summary>
            职位状态
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.DemandText">
            <summary>
            需求原因
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.IDType">
            <summary>
            证件类型
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.IsMarriage">
            <summary>
            婚姻状况
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.Gender">
            <summary>
            性别
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.IsFertility">
            <summary>
            生育情况
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.Religion">
            <summary>
            宗教信养
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.NatureOfWork">
            <summary>
            工作性质
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.GoToWorkTime">
            <summary>
            到岗时间
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.HealthVisionListen">
            <summary>
            身体状况,视力,听力
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.Liquor">
            <summary>
            酒量
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.GetQualification">
            <summary>
            学历(RmsV1 版本使用)
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.Degree">
            <summary>
            学位
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.ScholarshipLevelsType">
            <summary>
            奖学金级别
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.ScholarshipLevels">
            <summary>
            奖学金等级
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.Period">
            <summary>
            学习时段
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.Effects">
            <summary>
            学习效果
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.SkillsLevels">
            <summary>
            技能水平
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.LicenseType">
            <summary>
            驾照类型
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.Writing">
            <summary>
            写作能力
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.WritingGoodType">
            <summary>
            擅长类型
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.LanguageType">
            <summary>
            语言类别
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.LanguageLevels">
            <summary>
            语言水平 分听、说、读、写
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.ExamType">
            <summary>
            考试类型(英语)
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.MasterDegree">
            <summary>
            掌握程度
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.SuperiorJobs">
            <summary>
            上级职位
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.SubordinateJobs">
            <summary>
            下属职位
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.SuperiorRelation">
            <summary>
            职业认可时的 与之关系
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.Aim">
            <summary>
            出国目的
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.Identitys">
            <summary>
            在外身份
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.Funding">
            <summary>
            经费来源
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.ResultsType">
            <summary>
            成果类别
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.PublishChannel">
            <summary>
            发表渠道
            </summary>
             出版书籍改为 正式出版物
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.CreatePattern">
            <summary>
            创作模式
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.Certificate">
            <summary>
            证书类型
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.ResumeStatus">
            <summary>
            简历状态
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.MsShowType">
            <summary>
            天才秀分类
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.SourceType">
            <summary>
            数据来源
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.SourceType1">
            <summary>
            数据来源
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.ServicesRangeString">
            <summary>
            合作业务
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.EntStatus">
            <summary>
            企业状态
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.ArticleClassType">
            <summary>
            文章所述类别
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.MoveUpDown">
            <summary>
            列表上移下移
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.ServiceStatus">
            <summary>
            在职离职状态
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.ProjectInfoData">
            <summary>
            
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.Month">
            <summary>
            月份
            </summary>
        </member>
        <member name="F:Macrosage.Utility.EnumHelperBase.Month.Jan">
            <summary>
            一月 January
            </summary>
        </member>
        <member name="F:Macrosage.Utility.EnumHelperBase.Month.Feb">
            <summary>
            二月 February
            </summary>
        </member>
        <member name="F:Macrosage.Utility.EnumHelperBase.Month.Mar">
            <summary>
            三月 March
            </summary>
        </member>
        <member name="F:Macrosage.Utility.EnumHelperBase.Month.Apr">
            <summary>
            四月 April
            </summary>
        </member>
        <member name="F:Macrosage.Utility.EnumHelperBase.Month.May">
            <summary>
            五月 May
            </summary>
        </member>
        <member name="F:Macrosage.Utility.EnumHelperBase.Month.Jun">
            <summary>
            六月 June
            </summary>
        </member>
        <member name="F:Macrosage.Utility.EnumHelperBase.Month.Jul">
            <summary>
            七月 July
            </summary>
        </member>
        <member name="F:Macrosage.Utility.EnumHelperBase.Month.Aug">
            <summary>
            八月 August
            </summary>
        </member>
        <member name="F:Macrosage.Utility.EnumHelperBase.Month.Sep">
            <summary>
            九月September
            </summary>
        </member>
        <member name="F:Macrosage.Utility.EnumHelperBase.Month.Oct">
            <summary>
            十月 October
            </summary>
        </member>
        <member name="F:Macrosage.Utility.EnumHelperBase.Month.Nov">
            <summary>
            十一月November
            </summary>
        </member>
        <member name="F:Macrosage.Utility.EnumHelperBase.Month.Dec">
            <summary>
            十二月December
            </summary>
        </member>
        <member name="T:Macrosage.Utility.EnumHelperBase.ArticleType">
            <summary>
            主题类型
            </summary>
        </member>
    </members>
</doc>
